<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>计算机网络 on TomtomYoung Blog 🧐</title>
    <link>https://tomtomyoung.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</link>
    <description>Recent content in 计算机网络 on TomtomYoung Blog 🧐</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 01 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://tomtomyoung.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-websocket%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-websocket%E8%AF%A6%E8%A7%A3/</guid>
      <description>参考： MDN_WebSocket WebSocket 教程 1. WebSocket 应用场景 WebSocket 的特点： 在客户端与服务端之间建立起平等的连接，任何一方都可以发起请求； WebSocket 不受同源策略的限制； ws 、wss 分别对应的是 80、443。 在 Vue 中使用 WebSocket ： 1&amp;lt;template&amp;gt; 2 &amp;lt;div&amp;gt; 3 &amp;lt;h1&amp;gt;使</description>
    </item>
    
    <item>
      <title></title>
      <link>https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E9%89%B4%E6%9D%83%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 23 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E9%89%B4%E6%9D%83%E8%AF%A6%E8%A7%A3/</guid>
      <description>参考： 鉴权必须了解的 5 个兄弟：cookie、session、token、jwt、单点登录 1. cookie</description>
    </item>
    
    <item>
      <title></title>
      <link>https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-uriurlurn/</link>
      <pubDate>Tue, 21 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-uriurlurn/</guid>
      <description>参考： uri 和 url 的区别与联系（一看就理解） URI、URL 和 URN 有什么区别？ What is the difference between a URI, a URL and a URN? URI 统一资源标志符(Uniform Resource Identifier， URI)，表示的是 web 上每一种可用的资源，如 HTML 文档、图</description>
    </item>
    
    <item>
      <title></title>
      <link>https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-http1.0http1.1http2.0%E5%AF%B9%E6%AF%94/</link>
      <pubDate>Mon, 13 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-http1.0http1.1http2.0%E5%AF%B9%E6%AF%94/</guid>
      <description>参考： web 前端面试 - 面试官系列 HTTP/1.x 的连接管理 对比 HTTP1.1 和 HTTP2.0 1. HTTP 1.0 HTTP 1.0 是一种无状态，无连接的应用层协议。 HTTP 1.0 规定浏览器和服务器保持短暂的链接。 HTTP 属于 TCP/IP 模型中的应用层协议，而两个应用程序（我们这里指的就是浏览器与</description>
    </item>
    
    <item>
      <title></title>
      <link>https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-https%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Mon, 13 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-https%E8%AF%A6%E8%A7%A3/</guid>
      <description>参考： java 加密算法入门（三）-非对称加密详解 数字签名、数字证书与 HTTPS 是什么关系？ 中间人攻击，HTTPS 也可以被碾压 数字签名是什么？ 对称加密、非对称加密、摘要、数字签名、数字证书 数字签名-如何做到消息不可篡</description>
    </item>
    
    <item>
      <title></title>
      <link>https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-tcp%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Mon, 13 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-tcp%E8%AF%A6%E8%A7%A3/</guid>
      <description>参考： TCP 详解 TCP 为什么要三次握手？ TCP 协议详解（一）：TCP 头部结构 1. TCP 定义 TCP(Transmission Control Protocol 传输控制协议)是一种基于连接的、点对点的、 面向字节流的、基于 IP 的传输层协议。TCP 在 IP 报文的协议号是 6。 1. 基于连接 TCP 是 面向</description>
    </item>
    
    <item>
      <title></title>
      <link>https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E8%AF%A6%E8%A7%A3/</guid>
      <description>参考： TCP/IP 协议详解 OSI 七层模型： 应用层 表示层 会话层 传输层 网络层 数据链路层 物理层 TCP/IP 四层模型 应用层 运输层 网际层 网络接口层 折中的五层模型 应用层 传输层 网络层 数据链路层 物理层 1.2 五层模型各层的作用和协议 1. 物理层 物理层</description>
    </item>
    
    <item>
      <title></title>
      <link>https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-http%E7%BC%93%E5%AD%98%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 12 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-http%E7%BC%93%E5%AD%98%E8%AF%A6%E8%A7%A3/</guid>
      <description>参考： MDN HTTP/Caching MDN Cache-Control MDN Expires MDN ETag MDN If-None-Match 彻底弄懂 HTTP 缓存机制及原理 5 分钟看懂系列：HTTP 缓存机制详解 1. 什么是 HTTP 缓存 通过复用以前获取的资源，可以显著提高网站和应用程序的性能。 HTTP 缓存减少了等待时间和网络流量，因此减少了</description>
    </item>
    
    <item>
      <title></title>
      <link>https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-http%E8%AF%B7%E6%B1%82%E4%B8%8E%E5%93%8D%E5%BA%94%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 12 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-http%E8%AF%B7%E6%B1%82%E4%B8%8E%E5%93%8D%E5%BA%94%E8%AF%A6%E8%A7%A3/</guid>
      <description>参考： MDN http 1. HTTP HTTP (HyperText Transfer Protocol)，即超文本传输协议，是实现网络通信的一种规范。 1. HTTP 报文 HTTP 消息是服务器和客户端之间交换数据的方式。有两种类型的消息︰ 请求（requests）&amp;ndash;由客户端发</description>
    </item>
    
    <item>
      <title></title>
      <link>https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E8%AE%A1%E7%BD%91%E7%BB%9C-%E5%9F%9F%E5%90%8D%E4%B8%8Edns%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 12 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E8%AE%A1%E7%BD%91%E7%BB%9C-%E5%9F%9F%E5%90%8D%E4%B8%8Edns%E8%AF%A6%E8%A7%A3/</guid>
      <description>参考： MDN DNS DNS 原理入门 what-is-dns 工程师最容易搞错的域名知识 域名层级划分 域名分级与域名解析过程(DNS) 1. 域名 1. 域名的层级 根域名 .root 对于所有域名都是一样的，所以平时是省略的； 根服务器主要用来管理互联网的主目录； 全世</description>
    </item>
    
  </channel>
</rss>
