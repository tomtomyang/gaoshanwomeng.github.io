<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>面试 on TomtomYoung Blog</title>
    <link>https://gaoshanwomeng.github.io/categories/%E9%9D%A2%E8%AF%95/</link>
    <description>Recent content in 面试 on TomtomYoung Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 11 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://gaoshanwomeng.github.io/categories/%E9%9D%A2%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>面试题——CSS</title>
      <link>https://gaoshanwomeng.github.io/post/%E9%9D%A2%E8%AF%95%E9%A2%98css/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/%E9%9D%A2%E8%AF%95%E9%A2%98css/</guid>
      <description>1. CSS盒模型 1.1 标准盒模型 1.2 怪异盒模型 2. CSS选择器 标签选择器 选择器 例子 例子描述 element p 选择所有 &amp;lt;p&amp;gt; 元素。 类选择器 . 选择器 例子 例子描述 .class .intro 选择 class=&amp;ldquo;intro&amp;rdquo; 的所有元素。 id选择器 # 选择器 例子 例子描述 #id #firstname 选择 id=&amp;ldquo;firstname&amp;rdquo; 的元素。 子</description>
    </item>
    
    <item>
      <title>面试题——HTML</title>
      <link>https://gaoshanwomeng.github.io/post/%E9%9D%A2%E8%AF%95%E9%A2%98html/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/%E9%9D%A2%E8%AF%95%E9%A2%98html/</guid>
      <description>1. HTML文档的结构 1&amp;lt;!DOCTYPE html&amp;gt; 2&amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; 3 &amp;lt;head&amp;gt; 4 &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; 5 &amp;lt;meta http-equiv=&amp;#34;X-UA-Compatible&amp;#34; content=&amp;#34;IE=edge&amp;#34;&amp;gt; 6 &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&amp;gt; 7 &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt; 8 &amp;lt;/head&amp;gt; 9 10 &amp;lt;body&amp;gt; 11 &amp;lt;/body&amp;gt; 12&amp;lt;/html&amp;gt; 2. HTML5新增特性</description>
    </item>
    
    <item>
      <title>面试题——JS</title>
      <link>https://gaoshanwomeng.github.io/post/%E9%9D%A2%E8%AF%95%E9%A2%98js/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/%E9%9D%A2%E8%AF%95%E9%A2%98js/</guid>
      <description>1. JS基本数据类型 1.1 基本类型 1.2 引用类型 1.3 数据类型的判断 1.4 数据类型的转换 2. 数组的常用方法 2.1 改变原数组的方法 2.2 不改变原数组的方法 2.3 数组的遍历 3. 字符串的常用方法 4. 对象的常用方法 5. Math方法和Date方法 6.</description>
    </item>
    
    <item>
      <title>面试题——VUE</title>
      <link>https://gaoshanwomeng.github.io/post/%E9%9D%A2%E8%AF%95%E9%A2%98vue/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/%E9%9D%A2%E8%AF%95%E9%A2%98vue/</guid>
      <description>1. MVVM 2. VUE的特性/与React的区别 3. VUE的双向数据绑定的实现 核心是数据劫持与观察者模式 3.1 VUE2 3.2 VUE3 3.3 DOM diff 4. VUE的生命周期 beforeCreate( 创建前 ) 在实例初始化之后，数据观测和事件配置之前被调用，此时组件的选项对象</description>
    </item>
    
    <item>
      <title>面试题——优化</title>
      <link>https://gaoshanwomeng.github.io/post/%E9%9D%A2%E8%AF%95%E9%A2%98%E5%85%B6%E4%BB%96/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/%E9%9D%A2%E8%AF%95%E9%A2%98%E5%85%B6%E4%BB%96/</guid>
      <description>1. 前端性能优化 1.1 DNS预获取 一次DNS解析需要耗费 20-120 毫秒，减少DNS解析时间和次数是个很好的优化方式； DNS Prefetching 是让具有此属性的域名不需要用户点击链接就在后台解析； 默认情况下浏览器会对页面中和当前域名不在同</description>
    </item>
    
    <item>
      <title>面试题——浏览器</title>
      <link>https://gaoshanwomeng.github.io/post/%E9%9D%A2%E8%AF%95%E9%A2%98%E6%B5%8F%E8%A7%88%E5%99%A8/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/%E9%9D%A2%E8%AF%95%E9%A2%98%E6%B5%8F%E8%A7%88%E5%99%A8/</guid>
      <description>1. 浏览器的工作流程 2. 从输入URL到显示页面 DNS解析 建立TCP连接 客户端发动HTTP请求 服务端接收到请求并返回相应资源 浏览器渲染页面 断开连接 2. 浏览器缓存 2.1 http缓存 强缓存 协商缓存 缓存机制 2.2 本地存储 c</description>
    </item>
    
    <item>
      <title>面试题——算法与数据结构</title>
      <link>https://gaoshanwomeng.github.io/post/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
      <description></description>
    </item>
    
    <item>
      <title>面试题——计算机网络</title>
      <link>https://gaoshanwomeng.github.io/post/%E9%9D%A2%E8%AF%95%E9%A2%98%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/%E9%9D%A2%E8%AF%95%E9%A2%98%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</guid>
      <description>1. 七层模型和五层模型 1.1 七层模型与五层模型的介绍 OSI七层模型： 应用层 表示层 会话层 传输层 网络层 数据链路层 物理层 TCP/IP四层模型 应用层 运输层 网际层 网络接口层 折中的五层模型 应用层 传输层 网络层 数据链路层 物</description>
    </item>
    
  </channel>
</rss>
