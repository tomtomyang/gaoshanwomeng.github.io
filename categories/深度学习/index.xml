<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>深度学习 on TomtomYoung Blog</title>
    <link>https://gaoshanwomeng.github.io/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/</link>
    <description>Recent content in 深度学习 on TomtomYoung Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 18 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://gaoshanwomeng.github.io/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>opencv 腐蚀与膨胀</title>
      <link>https://gaoshanwomeng.github.io/post/opencv-%E8%85%90%E8%9A%80%E4%B8%8E%E8%86%A8%E8%83%80/</link>
      <pubDate>Sun, 18 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/opencv-%E8%85%90%E8%9A%80%E4%B8%8E%E8%86%A8%E8%83%80/</guid>
      <description>形态学操作 简单来讲，形态学操作就是基于形状的一系列图像处理操作。通过将 结构元素 作用于输入图像来产生输出图像。 最基本的形态学操作有二：腐蚀与膨胀(Erosion 与 Dilation)。 他们的运用广泛: 消除</description>
    </item>
    
    <item>
      <title>图像识别工程搭建步骤</title>
      <link>https://gaoshanwomeng.github.io/post/%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA%E6%AD%A5%E9%AA%A4/</link>
      <pubDate>Tue, 13 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA%E6%AD%A5%E9%AA%A4/</guid>
      <description>1. 数据准备 一般分为5个步骤 拍摄照片或者下载数据集； 图像标注； 图像数据处理： 图像合成、图像裁剪、改变图像像素大小； 检查标注文件的正确性； 划分训练集、验证集； 2. 搭建神经网络 3. 训练模型 读取数据的多线程生成器</description>
    </item>
    
    <item>
      <title>正则化解决过拟合</title>
      <link>https://gaoshanwomeng.github.io/post/%E6%AD%A3%E5%88%99%E5%8C%96%E8%A7%A3%E5%86%B3%E8%BF%87%E6%8B%9F%E5%90%88/</link>
      <pubDate>Tue, 23 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/%E6%AD%A3%E5%88%99%E5%8C%96%E8%A7%A3%E5%86%B3%E8%BF%87%E6%8B%9F%E5%90%88/</guid>
      <description>1.过拟合 1.什么是过拟合 underfitting通常是针对训练集，例如我们的预测pattern过于平滑（e.g直线来拟合多个输入点），也就是模型过于简单，这个通常可以通过引入多项式，或者神经网络等复</description>
    </item>
    
    <item>
      <title>MNIST手写数字识别</title>
      <link>https://gaoshanwomeng.github.io/post/mnist%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E8%AF%86%E5%88%AB/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/mnist%E6%89%8B%E5%86%99%E6%95%B0%E5%AD%97%E8%AF%86%E5%88%AB/</guid>
      <description>1.MNIST简介 MNIST 包括6万张28x28的训练样本，1万张测试样本，可以说它就是计算机视觉里面的Hello World。所以我也来用用MNIST。 2.实现思想 经过前一次关于梯度下降算法的学习，我们可以使</description>
    </item>
    
    <item>
      <title>pytorch简介</title>
      <link>https://gaoshanwomeng.github.io/post/pytorch%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/pytorch%E7%AE%80%E4%BB%8B/</guid>
      <description>1.机器学习与深度学习 人工智能的浪潮正席卷全球，诸多词汇时刻萦绕在我们的耳边，如人工智能，机器学习，深度学习等。“人工智能”的概念早在1956年就被提出，顾名思义用计算机来构造复杂的，拥有与人类智慧同</description>
    </item>
    
    <item>
      <title>opencv&amp;notebook</title>
      <link>https://gaoshanwomeng.github.io/post/opencvnotebook/</link>
      <pubDate>Sun, 31 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/opencvnotebook/</guid>
      <description>1.安装opencv-python 关于版本，在网上查到的一种说法是3.4.2之后的opencv版本好像涉及到一些专利问题，有些东西是没有的，所以我决定安装3.4.1😙。 1.pip安装指定版本 1pip3 install -i https://pypi.douban.com/simple opencv-python==3.4.1.15</description>
    </item>
    
    <item>
      <title>图像处理的基本操作</title>
      <link>https://gaoshanwomeng.github.io/post/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sun, 31 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</guid>
      <description>1. 读取图像并显示 1src = cv.imread(&amp;#34;图片路径&amp;#34;) 2cv.namedWindow(&amp;#34;input image&amp;#34;, cv.WINDOW_AUTOSIZE) 3cv.imshow(&amp;#34;input image&amp;#34;, src) 2. 读取摄像头信息 1def video_demo(): 2 capture = cv.VideoCapture(0) 3 while(True): 4 ret, frame = capture.read() 5 frame = cv.flip(frame, 1) 6 cv.imshow(&amp;#34;video&amp;#34;, frame) 7 c = cv.waitKey(50) 8 if c == 27: 9 break 3. 图像像素反转 1def access_pixels(image): 2 print(image.shape) 3 height = image.shape[0] 4 width = image.shape[1]</description>
    </item>
    
  </channel>
</rss>
