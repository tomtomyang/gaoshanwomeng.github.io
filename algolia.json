[{"content":"数据类型分为基本类型(Primitives)和引用类型(Object)，引用类型可以引申出子类型：Array、Date、Function等等。 **基本类型理解：**变量之间的互相赋值，是指开辟一块新的","lvl0":"js 数据类型与类型转换","lvl1":["前端"],"lvl2":"摘要","objectID":"b187cf6d8863fbf69979220fbb5c78f6","tags":["js"],"url":"https://tomtomyoung.top/post/js-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B8%8E%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"},{"content":"参考： MDN_let 为什么在 JavaScript 中为块范围变量声明选择名称“let”？ let深入理解\u0026mdash;let存在变量提升吗？ 我用了两个月的时间才理解 let JS变量封禁大法：薛定谔的X let 声明会提升（hoist）吗？ 1. 作用域对","lvl0":"js let\u0026const与块级作用域","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"5f91eccc8624cf7e6b100ee491d4240d","tags":["js"],"url":"https://tomtomyoung.top/post/js-letconst%E4%B8%8E%E5%9D%97%E7%BA%A7%E4%BD%9C%E7%94%A8%E5%9F%9F/"},{"content":"参考： MDN Scope 深入理解javascript作用域系列第一篇——内部原理 深入理解javascript作用域系列第二篇——词法作用域和动态作用域 你不懂JS：作用域与闭包 let, const和块级作用域 1. 作用域 第一种说","lvl0":"js 作用域\u0026作用域链","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"32328ec306c947f6fe7045abf6d04b9e","tags":["js"],"url":"https://tomtomyoung.top/post/js-%E4%BD%9C%E7%94%A8%E5%9F%9F%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE/"},{"content":"参考： 前端模块化：CommonJS,AMD,CMD,ES6 1. 模块化发展历程 在本站另一篇博客：《js webpack简介》的第一个章节：为什么使用webpack中，我们介绍了js代码编写的不同阶段： 远古阶","lvl0":"js 模块化与UMD详解","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"7bc3b0721c14cb1d1f971e9487ba91ac","tags":["js","模块化","umd"],"url":"https://tomtomyoung.top/post/js-%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B8%8Eumd%E8%AF%A6%E8%A7%A3/"},{"content":"『\u0026hellip;』 扩展运算符能将『数组』转换为逗号分隔的『参数序列』 1//声明一个数组 ... 2const tfboys = [\u0026#39;易烊千玺\u0026#39;,\u0026#39;王源\u0026#39;,\u0026#39;王俊凯\u0026#39;]; 3// =\u0026gt; \u0026#39;易","lvl0":"js 扩展运算符和rest参数","lvl1":["前端"],"lvl2":"摘要","objectID":"38a34aa198d1cc6629a484c0f91ef22d","tags":["js"],"url":"https://tomtomyoung.top/post/js-%E6%89%A9%E5%B1%95%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8Crest%E5%8F%82%E6%95%B0/"},{"content":"创建一个数组 字面量方式 1var a = [3, 11, 8]; 构造器 1// 创建一个指定大小的数组 2let 数组名称 = new Array(数组长度); 3// 创建一个空数组 4let 数组名称 = new Array(); 5// 创建一个给定数据的数组 6let 数组名称 = new Array(data1, data2, data3...); ES6 Array.of() 定义：返回由所有参","lvl0":"js array详解","lvl1":["前端"],"lvl2":"摘要","objectID":"23bc60f73bab46d35ee76825bd2f582e","tags":["js"],"url":"https://tomtomyoung.top/post/js-array%E8%AF%A6%E8%A7%A3/"},{"content":"1. 字符串长度 length 属性返回字符串的长度： 实例 1var txt = \u0026#34;ABCDEFGHIJKLMNOPQRSTUVWXYZ\u0026#34;; 2var sln = txt.length; 2. 查找字符串中的字符串 indexOf() 方法返回字符串中指定文本首次出现的索引（位置）： 实例 1var str = \u0026#34;The full name of China is the People\u0026#39;s Republic of China.\u0026#34;; 2var pos = str.indexOf(\u0026#34;China\u0026#34;); JavaScript 从零计算位置。 0 是字符串中的第","lvl0":"js string详解","lvl1":["前端"],"lvl2":"摘要","objectID":"143b6273bf397892d0aea1636cc578a8","tags":["js"],"url":"https://tomtomyoung.top/post/js-string%E8%AF%A6%E8%A7%A3/"},{"content":"参考： 编译语言和解释语言的区别 编译器与解释器 JavaScript的工作原理：解析、抽象语法树（AST）+ 提升编译速度5个技巧 IBM compiled-versus-interpreted-languages JavaScript 编译 - JIT (just-in-time) compiler 是怎么工作的 WebAssembly 系列（二）JavaScript Just-in-time (JIT) 工作原理 JS","lvl0":"js 代码解释执行详解","lvl1":["前端"],"lvl2":"摘要","objectID":"0bee2a896256c04199b3af1f3e4e9fcb","tags":["js"],"url":"https://tomtomyoung.top/post/js-%E4%BB%A3%E7%A0%81%E8%A7%A3%E9%87%8A%E6%89%A7%E8%A1%8C%E8%AF%A6%E8%A7%A3/"},{"content":"1. 为什么会出现Symbol 对象在 JavaScript 语言中扮演重要角色，它们的使用无处不在。对象通常用作键/值对的集合，然而，以这种方式使用它们有一个很大的限制: 在 symbol 出现之前，对象键只能是字符串，如果试图使用非字符串值","lvl0":"js symbol详解","lvl1":["前端"],"lvl2":"摘要","objectID":"5cc45d1cc1c6627991c3afb837566a94","tags":["js"],"url":"https://tomtomyoung.top/post/js-symbol%E8%AF%A6%E8%A7%A3/"},{"content":"参考： 维基百科_同源策略 浏览器同源政策及其规避方法 MDN_浏览器的同源策略 web_dev_同源策略 1. 同源策略 1. 什么是源 两个 URL 的 protocol、port (如果有指定的话)和 host组成了源。这个方案也","lvl0":"浏览器 同源策略详解","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"87061e0ab1057cd9a102b9622963c6c0","tags":["浏览器"],"url":"https://tomtomyoung.top/post/%E6%B5%8F%E8%A7%88%E5%99%A8-%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E8%AF%A6%E8%A7%A3/"},{"content":"Set 对象 Set 对象允许你存储任何类型的唯一值，无论是原始值或者是对象引用。 Set 中的特殊值 Set 对象存储的值总是唯一的，所以需要判断两个值是否恒等。有几个特殊值需要特殊对待： +0 与 -0 在存储判断唯一性的时候是恒等的，所","lvl0":"js set详解","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"776047e9716dfa7cb15f33d685efcce8","tags":["js"],"url":"https://tomtomyoung.top/post/js-set%E8%AF%A6%E8%A7%A3/"},{"content":"参考： MDN HTTP/Caching MDN Cache-Control MDN Expires MDN ETag MDN If-None-Match 彻底弄懂HTTP缓存机制及原理 5分钟看懂系列：HTTP缓存机制详解 1. 什么是HTTP缓存 通过复用以前获取的资源，可以显著提高网站和应用程序的性能。 HTTP 缓存减少了等待时间和网络流量","lvl0":"计算机网络 http缓存详解","lvl1":["计算机网络","精选"],"lvl2":"摘要","objectID":"efb103d374492e248c32c43f0ffb9348","tags":["http"],"url":"https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-http%E7%BC%93%E5%AD%98%E8%AF%A6%E8%A7%A3/"},{"content":"参考： MDN http 1. HTTP报文 HTTP消息是服务器和客户端之间交换数据的方式。有两种类型的消息︰ 请求（requests）\u0026ndash;由客户端发送用来触发一个服务器上的动作； 响应（responses）\u0026nd","lvl0":"计算机网络 http请求与响应详解","lvl1":["计算机网络","精选"],"lvl2":"摘要","objectID":"ddafe1e98497345e1e33c7842fae4a7c","tags":["http"],"url":"https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-http%E8%AF%B7%E6%B1%82%E4%B8%8E%E5%93%8D%E5%BA%94%E8%AF%A6%E8%A7%A3/"},{"content":"参考： MDN DNS DNS 原理入门 what-is-dns 工程师最容易搞错的域名知识 域名层级划分 域名分级与域名解析过程(DNS) 1. 域名 1. 域名的层级 根域名.root对于所有域名都是一样的，所以平时是省略的； 根服务器主要用来管理互联网的主目","lvl0":"计算计网络 域名与dns详解","lvl1":["计算机网络","精选"],"lvl2":"摘要","objectID":"e24173176f344de07c4a6b56b5f6ae66","tags":["dns","域名"],"url":"https://tomtomyoung.top/post/%E8%AE%A1%E7%AE%97%E8%AE%A1%E7%BD%91%E7%BB%9C-%E5%9F%9F%E5%90%8D%E4%B8%8Edns%E8%AF%A6%E8%A7%A3/"},{"content":"什么是生成器 生成器其实就是一个特殊的函数，是异步编程的一种解决方案 1//函数代码的分隔符 2function * gen(){ 3 console.log(111); 4 yield \u0026#39;一只没有耳朵\u0026#39;; 5 console.log(222); 6 yield \u0026#39;一只没有尾部\u0026#39;; 7 console.log(333); 8 yield \u0026#39;真奇","lvl0":"js 迭代器与生成器","lvl1":["前端"],"lvl2":"摘要","objectID":"deca5137f23ad59d64abe28cc8eccdb6","tags":["js"],"url":"https://tomtomyoung.top/post/js-%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%8E%E7%94%9F%E6%88%90%E5%99%A8/"},{"content":"ES6标准新增了一种新的函数：Arrow Function（箭头函数）。 为什么叫Arrow Function？因为它的定义用的就是一个箭头： 1x =\u0026gt; x * x 上面的箭头函数相当于： 1function (x) { 2 return x * x; 3} 箭头函数相当于","lvl0":"js 箭头函数详解","lvl1":["前端"],"lvl2":"摘要","objectID":"58133c32c52d490afa41c3866abe946d","tags":["js"],"url":"https://tomtomyoung.top/post/js-%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0%E8%AF%A6%E8%A7%A3/"},{"content":"React中有两种定义组件的方式： 函数式定义组件 1function Welcome() { 2 return \u0026lt;h1\u0026gt;函数式\u0026lt;/h1\u0026gt; 3} 类式定义组件 1class Welcome extends React.Component { 2 render() { 3 return \u0026lt;h1\u0026gt;类式\u0026lt;/h1\u0026gt;; 4 } 5} 我们来","lvl0":"react 类式组件与函数式组件","lvl1":["前端"],"lvl2":"摘要","objectID":"c36037bb3ed4fe36bab3a4e1d4de1ee8","tags":["react"],"url":"https://tomtomyoung.top/post/react-%E7%B1%BB%E5%BC%8F%E7%BB%84%E4%BB%B6%E4%B8%8E%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BB%84%E4%BB%B6/"},{"content":"1. 简易版Promise 1. 实现executor 比如我们实例化一个Promise对象时，会这样写： 1let p1 = new Promise((resolve, reject) =\u0026gt; { 2 resolve(12345); 3}) 这里要注意的是： constructor接收一个函数作为参数； 这个传入的函数会在实例化","lvl0":"js 手写promise","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"78fc4df463f67aef050465762a0e92f6","tags":["js","promise"],"url":"https://tomtomyoung.top/post/js-%E6%89%8B%E5%86%99promise/"},{"content":"1. 基本概念 Cookie Cookie 是小甜饼的意思。顾名思义，cookie 确实非常小，它的大小限制为4KB左右。它的主要用途有保存登录信息，比如你登录某个网站市场可以看到“记住密码”，这通常就是通过在 Cookie 中存入一段辨别用户身","lvl0":"浏览器 本地存储详解","lvl1":["前端"],"lvl2":"摘要","objectID":"2bf543553f5e783c2839e63643519e08","tags":["浏览器"],"url":"https://tomtomyoung.top/post/%E6%B5%8F%E8%A7%88%E5%99%A8-%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8%E8%AF%A6%E8%A7%A3/"},{"content":"1. 同源策略和域 关于什么是浏览器的同源策略，什么是域，可以查看本站另一篇文章：浏览器 同源策略详解","lvl0":"js jsonp详解","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"22f28eed392e4771f5bccafbcbd9a54e","tags":["js","jsonp"],"url":"https://tomtomyoung.top/post/js-jsonp%E8%AF%A6%E8%A7%A3/"},{"content":"1. map 定义 MDN map Map 对象保存键值对，并且能够记住键的原始插入顺序。任何值都可以作为一个键或一个值。 map和object的对比 Objects 和 Maps 类似的是，它们都允许你按键存取一个值、删除键、检测一个键是否绑定了值。因此（","lvl0":"js map详解","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"254e5670dc20df98ab31119ce6a71872","tags":["js","map"],"url":"https://tomtomyoung.top/post/js-map%E8%AF%A6%E8%A7%A3/"},{"content":"1：什么是XSS攻击？ XSS，即 Cross Site Script，跨站脚本攻击； XSS 攻击是指攻击者在网站上注入恶意的客户端代码，对客户端网页进行篡改，对用户浏览器进行控制或者获取用户隐私数据； XSS攻击可以分为3类：反","lvl0":"浏览器 xss\u0026csrf","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"80926b4f519ed27b5580fa64b1997bc8","tags":["浏览器","xss","csrf"],"url":"https://tomtomyoung.top/post/%E6%B5%8F%E8%A7%88%E5%99%A8-xsscsrf/"},{"content":"1. Promise 定义 promise A+ A promise represents the eventual result of an asynchronous operation. The primary way of interacting with a promise is through its then method, which registers callbacks to receive either a promise’s eventual value or the reason why the promise cannot be fulfilled. promise表示异步操作的最终结果。与promise交互的主要方式是通过它的then方","lvl0":"js promise详解","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"fc5ea801c14a4123c2ff0ae56d2296cb","tags":["js","promise"],"url":"https://tomtomyoung.top/post/js-promise%E8%AF%A6%E8%A7%A3/"},{"content":"1. prototype 每个函数都有一个 prototype 属性 每一个JavaScript对象(null除外)在创建的时候就会与之关联另一个对象，这个对象就是我们所说的原型，每一个对象都会从原型\u0026quot;继承\u0026quot;属性。 1function Person() { 2 3}","lvl0":"js 原型\u0026原型链\u0026继承","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"3e697f0d3cec7ad24050b7d70544263a","tags":["js"],"url":"https://tomtomyoung.top/post/js-%E5%8E%9F%E5%9E%8B%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%BB%A7%E6%89%BF/"},{"content":"1. setTimeout setTimeout的在一段时间之后，执行指定的一段函数 （仅执行一次） 可以理解为指定延迟后执行函数 2. setInterval setInterval是循环执行函数，每隔一段时间就执行一次指定的函数（执行N次） 可以理解为指","lvl0":"js setTimeout\u0026setInterval","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"6b701ecf5a40130d888eeae379ca1e6c","tags":["js"],"url":"https://tomtomyoung.top/post/js-settimeoutsetinterval/"},{"content":"参考： The JavaScript Event Loop: Explained ES2015(ES6) MDN_并发模型与事件循环 MDN_深入：微任务和 JavaScript 运行时环境 MDN_在 JavaScript 中通过 queueMicrotask() 使用微任务 Node.js_event_loop WHATWG规范_event_loop JavaScript Info_event-loop 宏任务和微任务到底是什么？ JavaScript 运行机制详解：再谈E","lvl0":"js 事件循环与异步并发","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"b809d478b36c4f28299d2f78636ba756","tags":["js"],"url":"https://tomtomyoung.top/post/js-%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E4%B8%8E%E5%BC%82%E6%AD%A5%E5%B9%B6%E5%8F%91/"},{"content":"husky5.x使用总结 husky可以让我们向项目中方便添加git hooks。通常情况下只需要如下两步就可在项目中引入并设置好husky： 将husky添加到项目的开发依赖中 1npm install -D husky 在package.j","lvl0":"git husky简介","lvl1":["前端"],"lvl2":"摘要","objectID":"87f5635d5fa92e77823e5897467d8aad","tags":["git"],"url":"https://tomtomyoung.top/post/git-husky%E7%AE%80%E4%BB%8B/"},{"content":"事件循环机制解析 当 Node.js 启动后，它会初始化事件循环，处理已提供的输入脚本（或丢入 REPL，本文不涉及到），它可能会调用一些异步的 API、调度定时器，或者调用 process.nextTick()，然后开始处","lvl0":"nodejs 事件循环","lvl1":["前端"],"lvl2":"摘要","objectID":"894707615499ad4ee16dbefeec2da8e6","tags":["nodejs"],"url":"https://tomtomyoung.top/post/nodejs-%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/"},{"content":"切换到你的线上分支（production branch）。 为这个紧急任务新建一个分支，并在其中修复它。 在测试通过之后，切换回线上分支，然后合并这个修补分支，最后将改动推送到线上分支。 切换回你最初工作的分","lvl0":"git 分支的新建与合并","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"66dbd977bfa50d55ab3c9d82b1c78095","tags":["git"],"url":"https://tomtomyoung.top/post/git-%E5%88%86%E6%94%AF%E7%9A%84%E6%96%B0%E5%BB%BA%E4%B8%8E%E5%90%88%E5%B9%B6/"},{"content":"1. 初始化配置 config 1git config -global user.name \u0026lt;name\u0026gt; #设置提交者名字 2git config -global user.email \u0026lt;email\u0026gt; #设置提交者邮箱 3git config -global core.editor \u0026lt;editor\u0026gt; #设置默认文本编辑器 4git config -global merge.tool \u0026lt;tool\u0026gt; #设置解决合并冲突时差异分析工具 5git config -list #检查已有的配置信息 2. 创建本地仓库 init 1git init #初始化本地版本","lvl0":"git 家族式命令","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"1fbeeaf7319f5d083928a2126d14a9c8","tags":["git"],"url":"https://tomtomyoung.top/post/git-%E5%AE%B6%E6%97%8F%E5%BC%8F%E5%91%BD%E4%BB%A4/"},{"content":"1. 从远程主机克隆 Git 的 clone 命令会为你自动将远程主机命名为 origin，拉取它的所有数据，创建一个指向它的 master 分支的指针，并且在本地将其命名为 origin/master。同时Git 也会给你一个与 origin 的maste","lvl0":"git 远程仓库与本地仓库","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"3ddfcd579d272dae9a5223f4874c476f","tags":["git"],"url":"https://tomtomyoung.top/post/git-%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E4%B8%8E%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93/"},{"content":"1. 场景 下面这个面试题你大概率遇到过： 1for (var i = 0; i \u0026lt; 5; i++) { 2 setTimeout(() =\u0026gt; { 3 console.log(i); 4 }, 10); 5} 这里var会声明一个全局变量i。函数会在10毫秒后异步执行，当函数在执行时，根据作用域链会在全局变量对象中进行查找，而此时循","lvl0":"js IIFE简介","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"74183de2f915e3008f31153b71e2c964","tags":["js"],"url":"https://tomtomyoung.top/post/js-iife%E7%AE%80%E4%BB%8B/"},{"content":"windows打开任务管理器，可以看到后台进程列表。可以看到每个进程的内存资源信息以及cpu占有率。 所以，应该更容易理解了：进程是cpu资源分配的最小单位（系统会给它分配内存） 最后，再用较为官方的术语","lvl0":"浏览器 浏览器多进程/js单线程","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"f8bbbaa55731d1e478e96640beea2630","tags":["浏览器"],"url":"https://tomtomyoung.top/post/%E6%B5%8F%E8%A7%88%E5%99%A8-%E6%B5%8F%E8%A7%88%E5%99%A8%E5%A4%9A%E8%BF%9B%E7%A8%8Bjs%E5%8D%95%E7%BA%BF%E7%A8%8B/"},{"content":"1. 为什么使用webpack 1. 远古阶段 在打包工具出现之前，我们是如何在 web 中使用 JavaScript 的？ 在浏览器中运行 JavaScript 有两种方法： 引用一些脚本来存放每个功能；此解决方案很难扩展，因为加载大量脚本会导致网络瓶颈。 使用一个包","lvl0":"js webpack简介","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"4d0574d519b91cc54b6d9c231fbd3f50","tags":["js","webpack"],"url":"https://tomtomyoung.top/post/js-webpack%E7%AE%80%E4%BB%8B/"},{"content":"1. 编辑器操作 ctrl+shift+n 打开新的编辑器窗口 ctrl+shiift+w 关闭当前编辑器窗口 f11 全屏显示 2. 文件操作 ctrl+tab 在打开的文件之间进行切换 ctrl+n 新建文件 ctrl+w 关闭当前文件窗口 ctrl+\\ 切出一个新的文件窗口 ctrl+alt+→/← 将当前文件切到新窗口 3. 光标移","lvl0":"vscode常用快捷键","lvl1":["前端"],"lvl2":"摘要","objectID":"3fe87b6446c711861e5c6ce5428df700","tags":["vscode"],"url":"https://tomtomyoung.top/post/vscode%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"},{"content":"console.assert(expression, object) 级别：Error expression评估为false时，将object写入控制台。 1const x = 5; 2const y = 3; 3const reason = \u0026#39;x is expected to be less than y\u0026#39;; 4console.assert(x \u0026lt; y, {x, y, reason}); console.clear() 清空控制台 1console.clear(); 如果启用了Preserve Log，console.","lvl0":"浏览器 console API","lvl1":["前端"],"lvl2":"摘要","objectID":"97cccb8ad9ebf7eb0bfef090de718627","tags":["浏览器"],"url":"https://tomtomyoung.top/post/%E6%B5%8F%E8%A7%88%E5%99%A8-console-api/"},{"content":"1.什么是React Native 要了解RN，肯定是要从官网入手： 按照官网的介绍，RN是使用React来创建Android和ios的原生应用的JavaScript框架。 RN具有以下的特点： 一次学习，随处编写 因为R","lvl0":"react react-native简介","lvl1":["前端"],"lvl2":"摘要","objectID":"86becbceffb475024be252233bdae3c0","tags":["react"],"url":"https://tomtomyoung.top/post/react-react-native%E7%AE%80%E4%BB%8B/"},{"content":"1. 什么是react 用来构建UI的 JavaScript库 React 不是一个 MVC 框架，仅仅是视图（V）层的库 2. react的特点 使用 JSX语法 创建组件，实现组件化开发，为函数式的 UI 编程方式打开了大门 虚拟DOM（Vir","lvl0":"react 简介","lvl1":["前端"],"lvl2":"摘要","objectID":"f1b0c5b8ef0a1b94be27c07e5dac9ed2","tags":["react"],"url":"https://tomtomyoung.top/post/react-%E7%AE%80%E4%BB%8B/"},{"content":"1. 浏览器快捷键 f12/ctrl+shift+c 打开devtools element界面 ctrl+shift+j 直接打开devtools console界面 ctrl+n 打开新的浏览器窗口 ctrl+shift+n 打开新的无痕浏览窗口 ctrl+w 关闭当前页面 shift+esc 打开任务管理器 ctrl+1-x 切换到不同页面 ctrl+p 打印页面 2. 开","lvl0":"浏览器 chrome常用快捷键","lvl1":["前端"],"lvl2":"摘要","objectID":"2a1d51779cbd0eef06b143ff9be5fbd7","tags":["浏览器"],"url":"https://tomtomyoung.top/post/%E6%B5%8F%E8%A7%88%E5%99%A8-chrome%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"},{"content":"1. console面板 1.1 查看记录的消息 记录消息的原因一般有两个： 确保代码以正确的顺序执行。 在某个时刻检查变量的值。 1console.log(\u0026#39;Loading!\u0026#39;); 2console.assert(document.querySelector(\u0026#39;h2\u0026#39;), \u0026#39;h2 not found!\u0026#39;); 3const artists = [ 4 { 5 first: \u0026#39;René\u0026#39;, 6 last: \u0026#39;Magritte\u0026#39; 7 }, 8 { 9 first: \u0026#39;Chaim\u0026#39;, 10 last: \u0026#39;Soutine\u0026#39; 11 }, 12","lvl0":"浏览器 chrome开发者工具使用指南","lvl1":["前端"],"lvl2":"摘要","objectID":"bda3a504cec159ef771649fbe6ef4a0d","tags":["浏览器"],"url":"https://tomtomyoung.top/post/%E6%B5%8F%E8%A7%88%E5%99%A8-chrome%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"},{"content":"1. CSS盒模型 1.1 标准盒模型 1.2 怪异盒模型 2. CSS选择器 标签选择器 选择器 例子 例子描述 element p 选择所有 \u0026lt;p\u0026gt; 元素。 类选择器 . 选择器 例子 例子描述 .class .intro 选择 class=\u0026ldquo;intro\u0026rdquo; 的所有元素。 id选择器 # 选择器 例子 例子描述 #id #firstname 选择 id=\u0026ldquo;firstname\u0026rdquo; 的元素。 子","lvl0":"面试题——CSS","lvl1":["面试"],"lvl2":"摘要","objectID":"bc56ff6414d203b1a8631189303126c5","tags":["CSS"],"url":"https://tomtomyoung.top/post/%E9%9D%A2%E8%AF%95%E9%A2%98css/"},{"content":"1. HTML文档的结构 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3 \u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; 5 \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34;\u0026gt; 6 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; 7 \u0026lt;title\u0026gt;Document\u0026lt;/title\u0026gt; 8 \u0026lt;/head\u0026gt; 9 10 \u0026lt;body\u0026gt; 11 \u0026lt;/body\u0026gt; 12\u0026lt;/html\u0026gt; 2. HTML5新增特性","lvl0":"面试题——HTML","lvl1":["面试"],"lvl2":"摘要","objectID":"be2561af2fd4b9c5c346edf3fccfd997","tags":["HTML"],"url":"https://tomtomyoung.top/post/%E9%9D%A2%E8%AF%95%E9%A2%98html/"},{"content":"1. JS基本数据类型 1.1 基本类型 1.2 引用类型 1.3 数据类型的判断 1.4 数据类型的转换 2. 数组的常用方法 2.1 改变原数组的方法 2.2 不改变原数组的方法 2.3 数组的遍历 3. 字符串的常用方法 4. 对象的常用方法 5. Math方法和Date方法 6.","lvl0":"面试题——JS","lvl1":["面试"],"lvl2":"摘要","objectID":"ffe93acf71d7cff7ec11e30b45d2f211","tags":["JS"],"url":"https://tomtomyoung.top/post/%E9%9D%A2%E8%AF%95%E9%A2%98js/"},{"content":"1. MVVM 2. VUE的特性/与React的区别 3. VUE的双向数据绑定的实现 核心是数据劫持与观察者模式 3.1 VUE2 3.2 VUE3 3.3 DOM diff 4. VUE的生命周期 beforeCreate( 创建前 ) 在实例初始化之后，数据观测和事件配置之前被调用，此时组件的选项对象","lvl0":"面试题——VUE","lvl1":["面试"],"lvl2":"摘要","objectID":"3b08643fd20254e4d9d2aef451b55c7e","tags":["VUE"],"url":"https://tomtomyoung.top/post/%E9%9D%A2%E8%AF%95%E9%A2%98vue/"},{"content":"1. 前端性能优化 1.1 DNS预获取 一次DNS解析需要耗费 20-120 毫秒，减少DNS解析时间和次数是个很好的优化方式； DNS Prefetching 是让具有此属性的域名不需要用户点击链接就在后台解析； 默认情况下浏览器会对页面中和当前域名不在同","lvl0":"面试题——优化","lvl1":["面试"],"lvl2":"摘要","objectID":"8d32e0dadb4b5875f065c3e562f07bc9","tags":["其他"],"url":"https://tomtomyoung.top/post/%E9%9D%A2%E8%AF%95%E9%A2%98%E5%85%B6%E4%BB%96/"},{"content":"1. 浏览器的工作流程 2. 从输入URL到显示页面 DNS解析 建立TCP连接 客户端发动HTTP请求 服务端接收到请求并返回相应资源 浏览器渲染页面 断开连接 2. 浏览器缓存 2.1 http缓存 强缓存 协商缓存 缓存机制 2.2 本地存储 c","lvl0":"面试题——浏览器","lvl1":["面试"],"lvl2":"摘要","objectID":"e4b202b271df70dfcef656c491a89328","tags":["浏览器"],"url":"https://tomtomyoung.top/post/%E9%9D%A2%E8%AF%95%E9%A2%98%E6%B5%8F%E8%A7%88%E5%99%A8/"},{"content":"","lvl0":"面试题——算法与数据结构","lvl1":["面试"],"lvl2":"摘要","objectID":"5a2e1202c340867f8ff90ee0c6590470","tags":["算法"],"url":"https://tomtomyoung.top/post/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"content":"1. 七层模型和五层模型 1.1 七层模型与五层模型的介绍 OSI七层模型： 应用层 表示层 会话层 传输层 网络层 数据链路层 物理层 TCP/IP四层模型 应用层 运输层 网际层 网络接口层 折中的五层模型 应用层 传输层 网络层 数据链路层 物","lvl0":"面试题——计算机网络","lvl1":["面试"],"lvl2":"摘要","objectID":"ca5310d5427a1f0a1bb00caa28309164","tags":["计算机网络"],"url":"https://tomtomyoung.top/post/%E9%9D%A2%E8%AF%95%E9%A2%98%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"},{"content":"1. 遍历二叉树 1var {tree} = require(\u0026#39;../重建二叉树/3.js\u0026#39;) 2 3// 先序遍历 4var preTraResult = []; 5 6function preTra(tree){ 7 if(tree.val!=\u0026#39;#\u0026#39;){ 8 preTraResult.push(tree.val); 9 preTra(tree.left); 10 preTra(tree.right); 11 } 12 else{ 13 preTraResult.push(tree.val); 14 return; 15 } 16} 17 18preTra(tree); 19 20console.log(preTraResult); 21 22// 中序遍历 23var inorderTraResult = []; 24 25function inorderTra(tree){ 26 if(tree.val!=\u0026#39;#\u0026#39;){ 27 inorderTra(tree.left); 28 inorderTraResult.push(tree.val); 29 inorderTra(tree.right); 30 }","lvl0":"js 算法2","lvl1":["算法"],"lvl2":"摘要","objectID":"24eb7c62559058f93b768db486517c06","tags":["基础"],"url":"https://tomtomyoung.top/post/js-%E7%AE%97%E6%B3%952/"},{"content":"1. 快速排序 1const arr = [ 31, 23, 34, 2, 13, 134, 1, 23, 456, 52, 31 ]; 2 3function quickSort(arr) { 4 // 1.找基准数， 5 // 比基准数大的放右边（右数组） 6 // 比基准数小的放左边（左数组） 7 let base_num = arr[0]; 8 let left_arr = []; 9 let right_arr = []; 10 11 // for( let i = 1; i \u0026lt; arr.length ; i++){ 12 // if(arr[i] \u0026lt; base_num){ 13","lvl0":"js 算法","lvl1":["算法"],"lvl2":"摘要","objectID":"00f517063346cdd2dc518ddd95bd6595","tags":["基础"],"url":"https://tomtomyoung.top/post/js-%E7%AE%97%E6%B3%95/"},{"content":"1. vw vh的介绍 vw,vh是css3中给我们提供的新的单位，他们是相对于viewport视窗的宽高进行计算的单位。说白了，就是相对于浏览器的窗口的大小。 vw : 1vw 等于视口宽度的1% vh : 1vh 等于视口高度的1% vmin","lvl0":"css vh\u0026vw","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"eb5221e3a392ff64e2db51e7c9003062","tags":["css"],"url":"https://tomtomyoung.top/post/css-vhvw/"},{"content":"在学习react框架时，我们会在App.js中写这样一种语法： 1import React,{Component} from \u0026#39;react\u0026#39; 表面看起来是结构赋值的样子，但其实，这是ES6的另一种引入方式，即default引入与单个引入相结合的方式。 想使用这种引入方式，就","lvl0":"import React,{Component} from 'react'解释","lvl1":["前端"],"lvl2":"摘要","objectID":"e4b4595b069e285a50d834539b34dfbb","tags":["React"],"url":"https://tomtomyoung.top/post/import-reactcomponent-from-react%E8%A7%A3%E9%87%8A/"},{"content":"1. 函数柯里化 函数的柯里化：通过函数调用继续返回函数的方式，实现多次接收参数最后统一处理的函数编码形式。 2. 高阶函数 2.1 定义 高阶函数：如果一个函数符合下面2个规范中的任何一个，那该函数就是高阶函数。 若A函数","lvl0":"js 函数柯里化与高阶函数","lvl1":["前端"],"lvl2":"摘要","objectID":"0846a914d335441b44091fec40bcaf76","tags":["js"],"url":"https://tomtomyoung.top/post/js-%E5%87%BD%E6%95%B0%E6%9F%AF%E9%87%8C%E5%8C%96%E4%B8%8E%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/"},{"content":"1. Number.EPSILON Number.EPSILON 是 JavaScript 表示的最小精度 EPSILON 属性的值接近于 2.2204460492503130808472633361816E-16 1function equal(a, b){ 2 if(Math.abs(a-b) \u0026lt; Number.EPSILON){ 3 return true; 4 }else{ 5 return false; 6 } 7} 8console.log(0.1 + 0.2 === 0.3); // false 0.1+1.2 = 0.30000000000000004 9console.log(equal(0.1 + 0.2, 0.3)) // true 10 2. 二进制和八进制 1let b = 0b1010; 2let o = 0o777; 3let d = 100; 4let x = 0xff; 5console.log(x); 3. Number.isFinite Number.isFinite 检测一个数值是否为有限数 1console.log(Number.isFinite(100)); 2console.log(Number.isFinite(100/0)); 3console.log(Number.isFinite(Infinity)); 4.","lvl0":"es6 数值扩展","lvl1":["前端"],"lvl2":"摘要","objectID":"50b92de4fc3b96d648a1417b8ec75698","tags":["es6"],"url":"https://tomtomyoung.top/post/es6-%E6%95%B0%E5%80%BC%E6%89%A9%E5%B1%95/"},{"content":"数据结构是计算机存储、组织数据的方式,算法是系统描述解决问题的策略。了解基本的数据结构和算法可以提高代码的性能和质量。 1. 栈 栈的特点：先进后出 1class Stack { 2 constructor() { 3 this.items = []; 4 } 5 6 // 入栈 7 push(element) { 8 this.items.push(element); 9 } 10 11 // 出栈 12","lvl0":"js 数据结构","lvl1":["前端"],"lvl2":"摘要","objectID":"a53c1fdec25e25ceb977c8e312448aea","tags":["js"],"url":"https://tomtomyoung.top/post/js-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"content":"根据hugo官网的介绍，hugo是世界上最受欢迎的静态网站生成器之一，基于golang开发，已经发布到0.65.0版本。hugo采用开源的goldmark作为markdown的解析器，兼容GitHub","lvl0":"hugo 从0编写主题","lvl1":["博客"],"lvl2":"摘要","objectID":"ee939543491bcf3b2dcb72d282c1f6b7","tags":["hugo"],"url":"https://tomtomyoung.top/post/hugo-%E4%BB%8E0%E7%BC%96%E5%86%99%E4%B8%BB%E9%A2%98/"},{"content":"今天在写了一个简单的H5页面，项目结构如下图所示： 然后在运行的时候突然报错 Access to script at ‘file:///Volumes/PERSON/font_end/h5xuexi/h5-learning3/vue_n","lvl0":"cross origin requests are only supported for protocol schemes填坑","lvl1":["前端"],"lvl2":"摘要","objectID":"0cb566e90907c3b1c137ad5ff431d1c3","tags":["js"],"url":"https://tomtomyoung.top/post/cross-origin-requests-are-only-supported-for-protocol-schemes%E5%A1%AB%E5%9D%91/"},{"content":"字符串模板引擎 ES5中的字符串缺乏多行字符串、字符串格式化、HTML转义等特性。 而ES6通过模板字面量的方式进行了填补，模板字面量试着跳出JS已有的字符串体系，通过一些全新的方法来解决问题。 1.基本用","lvl0":"es6 模板字符串","lvl1":["前端"],"lvl2":"摘要","objectID":"6a8cc6ff6c0cd23f0679f4f500fc2bb3","tags":["es6"],"url":"https://tomtomyoung.top/post/es6-%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2/"},{"content":"使用element一些组件，事件如果还有默认参数，如果想在添加自定义参数。 如： handleCheckedCitiesChange事件默认有一个回调参数，如果传一个自定义参数直接写的话 handleCheckedCitiesChange (“自定义参数”","lvl0":"elementUI事件回调函数传参，传递默认参数和自定义参数填坑","lvl1":["前端"],"lvl2":"摘要","objectID":"e1a2636e4f60ade13500f150d3d6a1bc","tags":["vue"],"url":"https://tomtomyoung.top/post/elementui%E4%BA%8B%E4%BB%B6%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%E4%BC%A0%E5%8F%82%E4%BC%A0%E9%80%92%E9%BB%98%E8%AE%A4%E5%8F%82%E6%95%B0%E5%92%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%82%E6%95%B0%E5%A1%AB%E5%9D%91/"},{"content":"1. for循环 javascript中的for循环选择多种多样，可你知道其中的差别在哪里吗？什么时候又该用哪种循环才是最佳策略？ 1.1 for 1//20年前的写法let len = myArray.Length 2for (let index = 0; index \u0026lt; len; index++) { 3 console.log(myArray[index]) 4} 1.2 forEach 1//ES","lvl0":"js 循环遍历详解","lvl1":["前端"],"lvl2":"摘要","objectID":"64aea794935fc36e8b57b35fc7f05fe9","tags":["js"],"url":"https://tomtomyoung.top/post/js-%E5%BE%AA%E7%8E%AF%E9%81%8D%E5%8E%86%E8%AF%A6%E8%A7%A3/"},{"content":"1 两种模糊匹配 如果正则只有精确匹配是没多大意义的，比如/hello/，也只能匹配字符串中的\u0026quot;hello\u0026quot;这个子串。 1var regex = /hello/; 2console.log( regex.test(\u0026#34;hello\u0026#34;) ); 正则表达式之所以强大，是因为其能实现模糊匹配。 而模糊","lvl0":"js 正则表达式","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"3a376bd59f9122baf751674e90000323","tags":["js"],"url":"https://tomtomyoung.top/post/js-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"},{"content":"在使用v-if控制元素显示隐藏时候，如果判断条件是数组中的元素，在一开始页面渲染显示正常，可以用数组内的变量来控制v-if元素，但是以后通过方法直接改变数组内变量却不能影响v-if控制的元素显示隐藏。","lvl0":"vue v-if填坑","lvl1":["前端"],"lvl2":"摘要","objectID":"7bee4d4ceaae8eab5e49340a83b0097e","tags":["vue"],"url":"https://tomtomyoung.top/post/vue-v-if%E5%A1%AB%E5%9D%91/"},{"content":"1. 控件参数 Lodop有如下控件参数,以页面object对象元素的参数形式使用： Caption 名称：设置控件的显示标题 格式： \u0026lt; pa ram name=\u0026ldquo;Caption\u0026rdquo; value=\u0026ldquo;我是打印控件lodop\u0026rdquo; \u0026gt; 功能： 控件在页面内","lvl0":"lodop api文档","lvl1":["前端"],"lvl2":"摘要","objectID":"ab2f07967d276ccae1d8918b20cb4ac6","tags":["lodop"],"url":"https://tomtomyoung.top/post/lodop-api%E6%96%87%E6%A1%A3/"},{"content":"转载自：http://www.c-lodop.com/faq/pp21.html 一．安装文件 1.Lodop打印控件安装文件两个: 32位安装程序：install_lodop32.exe； 64位安装程序：","lvl0":"lodop lodop\u0026c-lodop","lvl1":["前端"],"lvl2":"摘要","objectID":"1d0ff3dd943d3a98446dccf1eaa36b88","tags":["lodop"],"url":"https://tomtomyoung.top/post/lodop-lodopc-lodop/"},{"content":"转载自：http://www.c-lodop.com/faq/pp21.html 高版本的火狐谷歌不再支持np插件方式，需要安装使用C-Lodop，Lodop与C-Lodop的区别参考http://ww","lvl0":"lodop 控件未安装","lvl1":["前端"],"lvl2":"摘要","objectID":"4e5c4f31613fa06b414cff345cee9482","tags":["lodop"],"url":"https://tomtomyoung.top/post/lodop-%E6%8E%A7%E4%BB%B6%E6%9C%AA%E5%AE%89%E8%A3%85/"},{"content":"1. 代码背景 用vuex管理数据状态，state中有定义 expressTemplate: false, vue的cart页面有使用vant的标签, 提示报错Computed property “expressTemplate” was assigned to but it has no setter. 1\u0026lt;el-radio-group v-model=\u0026#34;expressTemplate\u0026#34;\u0026gt; 2 \u0026lt;el-radio v-for=\u0026#34;( item, index ) in expressList\u0026#34; :key=\u0026#34;index\u0026#34; :label=\u0026#34;item.id\u0026#34;\u0026gt;{{item.name}}\u0026lt;/el-radio\u0026gt; 3\u0026lt;/el-radio-group\u0026gt;","lvl0":"vue v-model绑定vuex中state数据报错填坑","lvl1":["前端"],"lvl2":"摘要","objectID":"81dbc45b10979702c8d485c064343869","tags":["vue"],"url":"https://tomtomyoung.top/post/vue-v-model%E7%BB%91%E5%AE%9Avuex%E4%B8%ADstate%E6%95%B0%E6%8D%AE%E6%8A%A5%E9%94%99%E5%A1%AB%E5%9D%91/"},{"content":"1. SSR和CSR的概念 SSR(Server Side Rendering)： SSR是传统的渲染方式，由服务端把渲染好的完整的页面发送给客户端。客户端拿到的是完整的页面，可以直接展示。前后端分离之前很长的一段时间里都是以服务端渲染","lvl0":"ssr\u0026csr","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"0a24fcc98daa4e14de3fd41013766f52","tags":["js"],"url":"https://tomtomyoung.top/post/ssrcsr/"},{"content":"1. 变量 变量如下所示： 1data() { 2 return { 3 // 记录选中行 4 selectRow: [], 5 // 记录展开行 6 expandRow: [], 7 // 表格数据 id必须有！！ 8 tableData: [ 9 { 10 id: 1, 11 wangwangID: \u0026#39;hahahaha-101\u0026#39;, 12 count: \u0026#39;20\u0026#39;, 13 date: \u0026#39;2016-05-03\u0026#39;, 14 name: \u0026#39;王小虎\u0026#39;, 15 address: \u0026#39;上海市普陀区金沙江路 1518 弄","lvl0":"el-table定制选中行样式和展开行样式","lvl1":["前端"],"lvl2":"摘要","objectID":"3f7fd779a2a53488a55e1e99af5a8962","tags":["vue","elementUI"],"url":"https://tomtomyoung.top/post/el-table%E5%AE%9A%E5%88%B6%E9%80%89%E4%B8%AD%E8%A1%8C%E5%B1%95%E5%BC%80%E8%A1%8C%E6%A0%B7%E5%BC%8F/"},{"content":"1. 新建组件 在components文件夹下新建组件，或者可以新建一个UI文件夹，用来专门存放二次封装的UI组件。 2. 编写组件 1. 基本结构 1\u0026lt;template\u0026gt; 2 \u0026lt;el-dialog 3 class=\u0026#34;dialog-1\u0026#34; \u0026gt; 4 \u0026lt;/el-dialog\u0026gt; 5\u0026lt;/template\u0026gt; 6 7\u0026lt;script\u0026gt; 8export default { 9 name: \u0026#34;myDialog1\u0026#34;, 10 props: { 11 }, 12 computed: { 13 }, 14 methods: { 15 } 16} 17\u0026lt;/script\u0026gt; 18","lvl0":"elementUI组件二次封装","lvl1":["前端"],"lvl2":"摘要","objectID":"64416a07661389d4c4433fe94fc4af24","tags":["vue","elementUI"],"url":"https://tomtomyoung.top/post/elementui%E7%BB%84%E4%BB%B6%E4%BA%8C%E6%AC%A1%E5%B0%81%E8%A3%85/"},{"content":"和上一篇中插入视频音频一样，我们同样使用iframe标签进行插入。 第一种是我在程序员使用的小工具网站上找到的在线代码编辑器，这种的话允许你修改代码并执行，但是不能更改语言类型，不是很好用： 另一种是一个","lvl0":"markdown中嵌入代码执行工具","lvl1":["博客"],"lvl2":"摘要","objectID":"8a9be6a6de7d4c053fae14b93ba088ff","tags":["markdown"],"url":"https://tomtomyoung.top/post/markdown%E4%B8%AD%E5%B5%8C%E5%85%A5%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E5%B7%A5%E5%85%B7/"},{"content":"我们之前介绍过typora+picgo+腾讯云的搭配，这使我们在编写markdown文档时可以方便的添加图片，并实现同步上传。那么，如果我们在markdown文档中想要添加一段视频或者音频，我们该如何","lvl0":"markdown中插入音视频","lvl1":["博客"],"lvl2":"摘要","objectID":"967db403cb3d04625fde14bce3050721","tags":["markdown"],"url":"https://tomtomyoung.top/post/markdown%E4%B8%AD%E6%8F%92%E5%85%A5%E8%A7%86%E9%A2%91/"},{"content":"1. 域名 1.1 域名简介 在 Internet 上有千百万台主机，为了区分这些主机，每一台主机都被分配一个 IP 地址。但由于 IP 地址没有实际意义且难于记忆，于是就有了域名（Domain Name）。 域名主要是由英文字母、阿拉伯数字、“ -","lvl0":"互联网建站全流程","lvl1":["其他"],"lvl2":"摘要","objectID":"2b0ff8d88a35c27a2a3eddf06b9ef22c","tags":["互联网建站"],"url":"https://tomtomyoung.top/post/%E4%BA%92%E8%81%94%E7%BD%91%E5%BB%BA%E7%AB%99%E5%85%A8%E6%B5%81%E7%A8%8B/"},{"content":"1. 自定义代码块样式 根据hugo的官方文档，我们可以看到hugo可以配置使用多种markdown的解析器，hugo markup 配置 其中有一项是highlight的配置： 将官方文档的配置项，放进自己的配置文件中，这","lvl0":"hugo 自定义代码块","lvl1":["博客"],"lvl2":"摘要","objectID":"a5164456cc4406f9fb7ad5df2c73b2b3","tags":["hugo"],"url":"https://tomtomyoung.top/post/hugo-%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%A3%E7%A0%81%E5%9D%97/"},{"content":"本文属于个人观点，跟本人在职公司的立场无关。由于最近 GitHub 服务器在国内访问速度严重变慢，虽然经过大幅度压缩尺寸，文中的图片仍然可能需要比较长时间才能加载。这篇文章揭示了 AI 领域重要的谬误和不实宣传，为了阻止","lvl0":"(转载)机器与人类视觉能力的差距（2）","lvl1":["转载"],"lvl2":"摘要","objectID":"3bf638378a307fa0831543035edebaef","tags":["王垠"],"url":"https://tomtomyoung.top/post/%E8%BD%AC%E8%BD%BD%E6%9C%BA%E5%99%A8%E4%B8%8E%E4%BA%BA%E7%B1%BB%E8%A7%86%E8%A7%89%E8%83%BD%E5%8A%9B%E7%9A%84%E5%B7%AE%E8%B7%9D2/"},{"content":"本文属于个人观点，跟本人在职公司的立场无关。由于最近 GitHub 服务器在国内访问速度严重变慢，虽然经过大幅度压缩尺寸，文中的图片仍然可能需要比较长时间才能加载。这篇文章揭示了 AI 领域重要的谬误和不实宣传，为了阻止","lvl0":"(转载)机器与人类视觉能力的差距（3）","lvl1":["转载"],"lvl2":"摘要","objectID":"199fa73de5f907fe50406ea9d987adce","tags":["王垠"],"url":"https://tomtomyoung.top/post/%E8%BD%AC%E8%BD%BD%E6%9C%BA%E5%99%A8%E4%B8%8E%E4%BA%BA%E7%B1%BB%E8%A7%86%E8%A7%89%E8%83%BD%E5%8A%9B%E7%9A%84%E5%B7%AE%E8%B7%9D3/"},{"content":"1. Git的诞生 转载廖雪峰的官方网站中的部分内容：https://www.liaoxuefeng.com/wiki/896043488029600/896202815778784 很多人都知道，Linus","lvl0":"git 简介","lvl1":["前端"],"lvl2":"摘要","objectID":"fd8691ca1a69cbcbcd8aede1ee7e4f96","tags":["git"],"url":"https://tomtomyoung.top/post/git-%E7%AE%80%E4%BB%8B/"},{"content":"1. 什么是字符集 在介绍字符集之前，我们先了解下为什么要有字符集。我们在计算机屏幕上看到的是实体化的文字，而在计算机存储介质中存放的实际是二进制的比特流。那么在这两者之间的转换规则就需要一个统一的标准，否","lvl0":"字符集和编码","lvl1":["其他"],"lvl2":"摘要","objectID":"fb0ccf358e8d04fca4ce1233063a9b75","tags":["字符集和编码"],"url":"https://tomtomyoung.top/post/%E5%AD%97%E7%AC%A6%E9%9B%86%E5%92%8C%E7%BC%96%E7%A0%81/"},{"content":"本文属于个人观点，跟本人在职公司的立场无关。由于最近 GitHub 服务器在国内访问速度严重变慢，虽然经过大幅度压缩尺寸，文中的图片仍然可能需要比较长时间才能加载。这篇文章揭示了 AI 领域重要的谬误和不实宣传，为了阻止","lvl0":"(转载)机器与人类视觉能力的差距（1）","lvl1":["转载"],"lvl2":"摘要","objectID":"66c279e898e8a776eb986d895180b215","tags":["王垠"],"url":"https://tomtomyoung.top/post/%E8%BD%AC%E8%BD%BD%E6%9C%BA%E5%99%A8%E4%B8%8E%E4%BA%BA%E7%B1%BB%E8%A7%86%E8%A7%89%E8%83%BD%E5%8A%9B%E7%9A%84%E5%B7%AE%E8%B7%9D1/"},{"content":"有人听说我想创业，给我提出了一些“忽悠”的办法。他们说，既然你是程序语言专家，而现在人工智能（AI）又非常热，那你其实可以搞一个“自动编程系统”，号称可以自动生成程序，取代程序员的工作，节省许许多多的","lvl0":"(转载)清华梦的破碎","lvl1":["转载"],"lvl2":"摘要","objectID":"7b9690ac130730a125d1631fe7d00c1b","tags":["王垠"],"url":"https://tomtomyoung.top/post/%E8%BD%AC%E8%BD%BD%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9A%84%E5%B1%80%E9%99%90%E6%80%A7/"},{"content":"早就有人问起我的学习情况，问我有没有找到理想的研究环境。我却总是弄一些小动物，要不就是好玩的内容在这上面。真是惭愧，因为一直觉得自己还没有什么发言权，一直觉得是不是自己搞错了。不过来了 Cornell 已经一年半，也","lvl0":"(转载)cornell感受","lvl1":["转载"],"lvl2":"摘要","objectID":"5461f231c9c8f4025e5f0c867761e7c2","tags":["王垠"],"url":"https://tomtomyoung.top/post/%E8%BD%AC%E8%BD%BDcornell%E6%84%9F%E5%8F%97/"},{"content":"在一阵阵唾骂和欢呼声中，《完全用linux工作》被转载到了天涯海角。很多人支持我，也有很多人唾骂我。我不知道它是怎样流传到那么多地方，其实我不知道它都被转到哪里去了…… 我知道现在这篇文章又会罗里罗索写","lvl0":"(转载)写给支持和反对完全用Linux工作的人们","lvl1":["转载"],"lvl2":"摘要","objectID":"9de3179b85c3dde3bff3834a36681ea9","tags":["王垠"],"url":"https://tomtomyoung.top/post/%E8%BD%AC%E8%BD%BD%E5%86%99%E7%BB%99%E6%94%AF%E6%8C%81%E5%92%8C%E5%8F%8D%E5%AF%B9%E5%AE%8C%E5%85%A8%E7%94%A8linux%E5%B7%A5%E4%BD%9C%E7%9A%84%E4%BA%BA%E4%BB%AC/"},{"content":"UNIX 是简单的，你不需要成为天才也能理解这种简单 由于GNU/Linux这个词太长，下面如果没有特别指明，“Linux”就是指“GNU/Linux”。 在这个年代，恐怕没有人需要我来介绍 Linux 是什么了吧？如果你觉","lvl0":"(转载)完全用Linux工作","lvl1":["转载"],"lvl2":"摘要","objectID":"95460105542f25f4daea2bc78eefc9d9","tags":["王垠"],"url":"https://tomtomyoung.top/post/%E8%BD%AC%E8%BD%BD%E5%AE%8C%E5%85%A8%E7%94%A8linux%E5%B7%A5%E4%BD%9C/"},{"content":"清华梦的诞生 小时候，妈妈给我一个梦。她指着一个大哥哥的照片对我说，这是爸爸的学生，他考上了清华大学，他是我们中学的骄傲。长大后，你也要进入清华大学读书，为我们家争光。我不知道清华是什么样子，但是我知道","lvl0":"(转载)清华梦的破碎","lvl1":["转载"],"lvl2":"摘要","objectID":"3e2a1c304423d3b4fbaa2699e8298e47","tags":["王垠"],"url":"https://tomtomyoung.top/post/%E8%BD%AC%E8%BD%BD%E6%B8%85%E5%8D%8E%E6%A2%A6%E7%9A%84%E7%A0%B4%E7%A2%8E/"},{"content":"1.连接数据库 1// 引入安装的包 2var mongoose = require(\u0026#39;mongoose\u0026#39;); 3mongoose.connect(\u0026#39;mongodb://localhost/mongoo\u0026#39;); 4//mongoo这里是代表数据库的名称 5var db = mongoose.connection; 6db.on(\u0026#39;error\u0026#39;, console.error.bind(console, \u0026#39;连接失败\u0026#39;)); 7db.once(\u0026#39;open\u0026#39;, function() { 8 console.log(\u0026#39;连接成功\u0026#39;) 9}); 10// new一个","lvl0":"mongoose使用教程","lvl1":["数据库"],"lvl2":"摘要","objectID":"5a7772e39e6f55950e560df0528165e1","tags":["mongodb"],"url":"https://tomtomyoung.top/post/mongoose%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"},{"content":"1. 什么是Redis Redis全称REmote DIctionary Server( 远程字典服务器 ) ，是一个由Salvatore Sanfilippo写的key-value存储系统。 Redis遵守BSD协议、支持网络、可基于内存亦可持久化","lvl0":"redis简介","lvl1":["服务端"],"lvl2":"摘要","objectID":"eb34ab98780db8459d01756d3d0e5a8d","tags":["redis"],"url":"https://tomtomyoung.top/post/redis%E7%AE%80%E4%BB%8B/"},{"content":"1. 我们常用的数据库有哪些？ MySQL和MariaDB； Oracle； SQL Server； 上面的三个是最流行的数据库，也是我们开发时频繁的使用数据库。 MySQL是关系型数据库管理系统。 Oracle全称Ora","lvl0":"mongoDB简介","lvl1":["数据库"],"lvl2":"摘要","objectID":"884043066b183a4c14ece59f4e581dbd","tags":["mongodb"],"url":"https://tomtomyoung.top/post/mongodb%E7%AE%80%E4%BB%8B/"},{"content":"1.jacascript JavaScript和ECMAScript通常被人用来表达相同的意思，但JavaScript的含义去比ECMA-262中规定的多得多。一个完整的JavaScript实现应由三个部分组成： 核心（ECM","lvl0":"node\u0026npm简介","lvl1":["前端"],"lvl2":"摘要","objectID":"19a301007ac509eb1607f4e3d574d581","tags":["node"],"url":"https://tomtomyoung.top/post/nodenpm%E7%AE%80%E4%BB%8B/"},{"content":"1.什么是预检请求 定义：预检请求（Preflighted requests ）是浏览器发起跨域请求时，通过OPTIONS方法询问服务器对跨域请求的支持情况（支持的包含请求方法、请求头、数据类型）。 2.什么时候会触发预检","lvl0":"ajax 预检请求","lvl1":["前端","精选"],"lvl2":"摘要","objectID":"9703cc4f68824537976dc1a23cdfd296","tags":["ajax"],"url":"https://tomtomyoung.top/post/ajax-%E9%A2%84%E6%A3%80%E8%AF%B7%E6%B1%82/"},{"content":"1. XMLHTTPRequest（xhr） XMLHTTPRequest对象，顾名思义：是基于XML的HTTP请求。我们在浏览器中使用XMLHTTPRequest对象在服务器之间通信，传输的数据是使用XM","lvl0":"ajax xhr","lvl1":["前端"],"lvl2":"摘要","objectID":"5ea52843f262b2c2139fde283876eb93","tags":["ajax"],"url":"https://tomtomyoung.top/post/ajax-xhr/"},{"content":"1. 前后端不分离 我们先看看一个 Web 系统，在前后端不分离时架构设计是什么样的： 用户在浏览器上发送请求，服务器端接收到请求，根据 Header 中的 token 进行用户鉴权，从数据库取出数据，处理后将结果数据填入 HTML 模板，返回给浏览器","lvl0":"前后端分离简介","lvl1":["前端"],"lvl2":"摘要","objectID":"e81efc57782e38b277830ed75b60b8fd","tags":["前后端分离"],"url":"https://tomtomyoung.top/post/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E7%AE%80%E4%BB%8B/"},{"content":"Flash是一种交互式矢量图和Web动画的标准，它可以用来制作动画或者播放视频。作为一款诞生20多年的产品，Flash当然也有过它的巅峰。无数优质的Flash动画和游戏，在那个时代，Flash似乎就是","lvl0":"flash简介","lvl1":["前端"],"lvl2":"摘要","objectID":"218b4964cba73e33be2cc24a478b41af","tags":["flash"],"url":"https://tomtomyoung.top/post/flash%E7%AE%80%E4%BB%8B/"},{"content":"1.官方解释 1.1 html HTML称为超文本标记语言，是一种标识性的语言。它包括一系列标签．通过这些标签可以将网络上的文档格式统一，使分散的Internet资源连接为一个逻辑整体。HTML文本是由HTML命令组","lvl0":"html5\u0026html\u0026h5","lvl1":["前端"],"lvl2":"摘要","objectID":"46e5bf5fb6a51cb87a2eec683365a920","tags":["html"],"url":"https://tomtomyoung.top/post/html5htmlh5/"},{"content":"1.官方解释 SVG是一种图像文件格式，它的英文全称为Scalable Vector Graphics，意思为可缩放的矢量图形。它是基于XML（Extensible Markup Language），由World Wide Web Consort","lvl0":"svg简介","lvl1":["前端"],"lvl2":"摘要","objectID":"93c7856610ad6da54a8f59f915838f0a","tags":["svg"],"url":"https://tomtomyoung.top/post/svg%E7%AE%80%E4%BB%8B/"},{"content":"1.1、Spring ​ Spring是一个开源框架，Spring是于2003 年兴起的一个轻量级的Java 开发框架，由Rod Johnson 在其著作Expert One-On-One J2EE Development and Design中阐述的部分理念和原型衍生而来。它是为","lvl0":"javaweb ssm","lvl1":["服务端"],"lvl2":"摘要","objectID":"f5432d51091d5e891b751c717b12eff6","tags":["java"],"url":"https://tomtomyoung.top/post/javaweb-ssm/"},{"content":"1.什么是servlet servlet接口定义的是一套处理网络请求的规范，所有实现servlet的类，都需要实现它那五个方法，其中最主要的是两个生命周期方法 init()和destroy()，还有一个处","lvl0":"javaweb servlet","lvl1":["服务端"],"lvl2":"摘要","objectID":"2109904968d6e8ba3aabd286b6d6ee94","tags":["java"],"url":"https://tomtomyoung.top/post/javaweb-servlet/"},{"content":"转载链接：https://www.cnblogs.com/codebook/p/13416465.html 这篇文章主要介绍了vuex中modules的基本用法。 1. store文件结构 1- src 2- components 3- store 4 -index.js 5 -modules","lvl0":"vue vuex中的modules使用","lvl1":["前端"],"lvl2":"摘要","objectID":"7eaa64470caf6282f0e8ecd5cf284c2c","tags":["vue"],"url":"https://tomtomyoung.top/post/vue-vuex%E4%B8%AD%E7%9A%84modules%E4%BD%BF%E7%94%A8/"},{"content":"1.什么是插槽？ 插槽（Slot）是Vue提出来的一个概念，正如名字一样，插槽用于决定将所携带的内容，插入到指定的某个位置，从而使模板分块，具有模块化的特质和更大的重用性。 插槽显不显示、怎样显示是由父组","lvl0":"vue slot简介","lvl1":["前端"],"lvl2":"摘要","objectID":"1de4780f01b6f8387e2ecc1bfb6aa2c2","tags":["vue"],"url":"https://tomtomyoung.top/post/vue-slot%E7%AE%80%E4%BB%8B/"},{"content":"1.Vuex概述 Vuex是实现组件全局状态（数据）管理的一种机制，可以方便的实现组件之间的数据共享 使用Vuex管理数据的好处： A.能够在vuex中集中管理共享的数据，便于开发和后期进行维护 B.能够高效","lvl0":"vue vuex简介","lvl1":["前端"],"lvl2":"摘要","objectID":"dc5ff7620139ea03e7c6a43faa5f4d63","tags":["vue"],"url":"https://tomtomyoung.top/post/vue-vuex%E7%AE%80%E4%BB%8B/"},{"content":"形态学操作 简单来讲，形态学操作就是基于形状的一系列图像处理操作。通过将 结构元素 作用于输入图像来产生输出图像。 最基本的形态学操作有二：腐蚀与膨胀(Erosion 与 Dilation)。 他们的运用广泛: 消除","lvl0":"opencv 腐蚀与膨胀","lvl1":["深度学习"],"lvl2":"摘要","objectID":"5695b099a67308ebcd77f68d466217ff","tags":["opencv"],"url":"https://tomtomyoung.top/post/opencv-%E8%85%90%E8%9A%80%E4%B8%8E%E8%86%A8%E8%83%80/"},{"content":"1. ECMAScript的简介 ECMAScript是一种由Ecma国际（前身为欧洲计算机制造商协会,英文名称是European Computer Manufacturers Association）通过ECMA-262标准化的脚本程序设计语言。这","lvl0":"ecmascript\u0026javascript","lvl1":["前端"],"lvl2":"摘要","objectID":"ab82a7670cd2dd1c535fde68152e7757","tags":["js"],"url":"https://tomtomyoung.top/post/ecmascriptjavascript/"},{"content":"1. 数据准备 一般分为5个步骤 拍摄照片或者下载数据集； 图像标注； 图像数据处理： 图像合成、图像裁剪、改变图像像素大小； 检查标注文件的正确性； 划分训练集、验证集； 2. 搭建神经网络 3. 训练模型 读取数据的多线程生成器","lvl0":"图像识别工程搭建步骤","lvl1":["深度学习"],"lvl2":"摘要","objectID":"a3db09226b6e64ae0268aaa8317c2824","tags":["基础"],"url":"https://tomtomyoung.top/post/%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA%E6%AD%A5%E9%AA%A4/"},{"content":"1.基本概念 了解数据库与数据仓库的区别之前，首先掌握三个概念。数据库软件、数据库、数据仓库。 数据库软件：是一种软件，可以看得见，可以操作。用来实现数据库逻辑功能。属于物理层。 数据库：是一种逻辑概念，用","lvl0":"数据库与数据仓库","lvl1":["数据库"],"lvl2":"摘要","objectID":"ec7890c420c0fa53c2f010a11e544287","tags":["数据库与数据仓库"],"url":"https://tomtomyoung.top/post/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8E%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/"},{"content":"1.jre JRE是Java Runtime Environment的缩写，顾名思义是java运行时环境。 包含了java虚拟机，java基础类库。是使用java语言编写的程序运行所需要的软件环境，是提供给想运行java程序的用","lvl0":"javase jdk\u0026jre","lvl1":["服务端"],"lvl2":"摘要","objectID":"f6aae1fb69457787af20a010de962e54","tags":["java"],"url":"https://tomtomyoung.top/post/javase-jdkjre/"},{"content":"1.什么是本地方法 在Java中，有些方法涉及到与操作系统交互，获取和使用操作系统的硬件或软件的资源，单纯的用Java实现要么实现很困难，或者不能实现，这时候就要使用本地方法，本地方法就是用其他语言写的","lvl0":"javase 本地方法和本地方法栈","lvl1":["服务端"],"lvl2":"摘要","objectID":"443a17d359884c2394a85887f3585633","tags":["java"],"url":"https://tomtomyoung.top/post/javase-%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E5%92%8C%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%A0%88/"},{"content":"一. 什么是jvm java中的jvm又称java虚拟机。java之所以是跨平台的编程语言，和jvm有很大的关系。一般的高级语言如果要在不同的平台上运行，至少需要编译成不同的目标代码。在引入了jvm后，j","lvl0":"javase jvm","lvl1":["服务端"],"lvl2":"摘要","objectID":"d646f8a044ae84959a7649d5590b953a","tags":["java"],"url":"https://tomtomyoung.top/post/javase-jvm/"},{"content":"1.相关概念 1.什么是JDBC JDBC（Java Data Base Connectivity,java数据库连接）是一种用于执行SQL语句的Java API，可以为多种关系数据库提供统一访问，它由一组用Java语言编写","lvl0":"javase jdbc","lvl1":["服务端"],"lvl2":"摘要","objectID":"72a1d17767e2bed7617d99c75146f9ed","tags":["java"],"url":"https://tomtomyoung.top/post/javase-jdbc/"},{"content":"Junit单元测试 测试分类 黑盒测试 白盒测试 区别 黑盒测试不需要写代码，给出输入，看结果是否符合输出 白盒测试需要写代码关注程序的具体执行流程 Junit单元测试 Junit单元测试为白盒测试 使用步骤 具体导入环","lvl0":"javase 测试和反射","lvl1":["服务端"],"lvl2":"摘要","objectID":"50e077c56439319c5cf02a294cf9782f","tags":["java"],"url":"https://tomtomyoung.top/post/javase-%E6%B5%8B%E8%AF%95%E5%92%8C%E5%8F%8D%E5%B0%84/"},{"content":"","lvl0":"javase 编译执行","lvl1":["服务端"],"lvl2":"摘要","objectID":"958a3a73734015c56a0aeae470df6caf","tags":["java"],"url":"https://tomtomyoung.top/post/javase-%E7%BC%96%E8%AF%91%E6%89%A7%E8%A1%8C/"},{"content":"1.什么是断点 断点是程序暂停执行的位置，调试时程序运行到此处，就会暂停。 2.vscode中配置ts调试 在vscode中选择运行，然后选择添加配置： 在launch.json里写入一下内容 1{ 2 // 使用 IntelliSense 了解","lvl0":"ts 断点调试","lvl1":["前端"],"lvl2":"摘要","objectID":"fa232e2065c2ab207c808c1dd49850e3","tags":["ts"],"url":"https://tomtomyoung.top/post/ts-%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95/"},{"content":"1.为什么是TS+VUE 前端正处在逐步挺进企业级开发业务的过程中，强类型的TS已经广泛的使用起来，而脚手架工具也是前端工程化的基础。 2.使用vuecli脚手架创建项目 1.创建项目 1vue create 项目名 2.安装vu","lvl0":"ts ts与vue","lvl1":["前端"],"lvl2":"摘要","objectID":"9780163912649a384a459147cf9764af","tags":["ts","vue"],"url":"https://tomtomyoung.top/post/ts-ts%E4%B8%8Evue/"},{"content":"下面我们建一个类：class Duck 1class Duck { 2 DuckName: string; 3 Age: number; 4 Fly: string; 5 constructor(duckName: string, age: number, fly: string) { 6 this.DuckName = duckName; 7 this.Age = age; 8 this.Fly = fly; 9 } 10 greet() { 11 let outString: string = \u0026#34;我是鸭子，我的名字是\u0026#34; + this.DuckName + \u0026#34;，我现在\u0026#34; + this.Age + \u0026#3","lvl0":"ts 类与对象","lvl1":["前端"],"lvl2":"摘要","objectID":"49bc93d365958ede33dede93be785093","tags":["ts"],"url":"https://tomtomyoung.top/post/ts-%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/"},{"content":"网络编程就是编写程序使两台联网的计算机相互交换数据。这就是全部内容了吗？是的！网络编程要比想象中的简单许多。 那么，这两台计算机之间用什么传输数据呢？首先需要物理连接。如今大部分计算机都已经连接到互联网","lvl0":"socket简介","lvl1":["前端"],"lvl2":"摘要","objectID":"5d5aa47faed147314ffa4427bf9b1698","tags":["socket"],"url":"https://tomtomyoung.top/post/socket%E7%AE%80%E4%BB%8B/"},{"content":"1.变量与数据类型 1.声明变量 在js中变量是不区分类型的，这一点在ts中做出了改变，ts规定变量在声明时必须规定好这个变量的数据类型，并以:的形式进行指定。 2.数据类型 JavaScript 的类型分为两种：原始数据类型（","lvl0":"ts 基础语法","lvl1":["前端"],"lvl2":"摘要","objectID":"98b68fb55d749e90cefc1de070803da5","tags":["ts"],"url":"https://tomtomyoung.top/post/ts-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"},{"content":"1.TS简介 TypeScript 是 JavaScript 的一个超集，主要提供了类型系统和对 ES6 的支持，它由 Microsoft 开发，代码开源于 GitHub 上。 其次引用官网的定义： TypeScript 是 JavaScript 的类型的超集，它可以编译成纯 JavaScript。编译出来的 JavaScript 可以运行在任何浏览器上","lvl0":"ts 安装和配置","lvl1":["前端"],"lvl2":"摘要","objectID":"1c3af5bac18dbeb4f00127e14d90e2fd","tags":["ts"],"url":"https://tomtomyoung.top/post/ts-%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/"},{"content":"1.举例 我们以我们使用浏览器访问bilibili这个网站为例，来看一下我们是如何使用互联网来发送和接收数据的。 当我的个人电脑接入互联网之后，我的电脑会得到一个编号用来标识我这台电脑的身份，这个编号地址","lvl0":"互联网运作方式","lvl1":["前端"],"lvl2":"摘要","objectID":"34fdcc27549a441fbed39c0343887100","tags":["浏览器"],"url":"https://tomtomyoung.top/post/%E4%BA%92%E8%81%94%E7%BD%91%E8%BF%90%E4%BD%9C%E6%96%B9%E5%BC%8F/"},{"content":"1.安装docker 不同的linux发行版使用不同的包管理器，因此安装docker的命令不同。 红帽系：CentOS，Fedora 1yum -y install yum-utils device-mapper-persistent-data lvm2 2yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo 3yum makacache fast 4yum -y install docker-ce arch系：Arch Linux，Manj","lvl0":"docker基本操作","lvl1":["linux"],"lvl2":"摘要","objectID":"7a9d946db9f8e66c185c1911dbcfd4d9","tags":["docker"],"url":"https://tomtomyoung.top/post/docker%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"},{"content":"1.为什么使用docker 在实际的开发中，我们常常会遇到如下几个问题： 一个项目，我本地运行没有问题，换一台电脑运行就不好用了。这就会引起开发人员和测试人员的冲突。 在发生海量并发时，比如天猫双十一，我们","lvl0":"docker简介","lvl1":["linux"],"lvl2":"摘要","objectID":"3e8cc491a2b5fff7b78cfa519c3d54bd","tags":["docker"],"url":"https://tomtomyoung.top/post/docker%E7%AE%80%E4%BB%8B/"},{"content":"1.问题 在使用thinkphp作为后端的框架时，对于一个我们一直在使用的数据库，如果我们中途对数据库中某个表进行字段的添加，那么会出现一种情况是我们需要对这个新添加的字段进行操作时，会提示非法字段，也","lvl0":"thinkphp数据库缓存问题","lvl1":["服务端"],"lvl2":"摘要","objectID":"bfee462ecdf5106457d3b7c49f0e412e","tags":["php"],"url":"https://tomtomyoung.top/post/thinkphp%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BC%93%E5%AD%98%E9%97%AE%E9%A2%98/"},{"content":"1.MariaDB(mysql) 1.安装MariaDB 1sudo pacman -S mariadb 2.配置MariaDB 1sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql 2.php7 1.安装php7 1sudo pacman -S php-fpm 2.配置php 编辑 /etc/php/php.ini配置文件。 1sudo vim /etc/php/php.ini 找到如下两行文字，去掉前面的#符号以启用my","lvl0":"linux manjaro配置lnmp环境","lvl1":["linux"],"lvl2":"摘要","objectID":"e265510cbce4539f6895fc10323ff40c","tags":["manjaro"],"url":"https://tomtomyoung.top/post/linux-manjaro%E9%85%8D%E7%BD%AElnmp%E7%8E%AF%E5%A2%83/"},{"content":"linux平台有很多思维导图软件可以使用，包括xmind，mindmaster这种知名软件，以及freemind，view your mind这类开源软件。但是在实际使用中，xmind是收费的，mindmast","lvl0":"linux 自制百度脑图客户端","lvl1":["linux"],"lvl2":"摘要","objectID":"87e5ce10aa4f2e54d5460ca3649358c4","tags":["manjaro"],"url":"https://tomtomyoung.top/post/linux-%E8%87%AA%E5%88%B6%E7%99%BE%E5%BA%A6%E8%84%91%E5%9B%BE%E5%AE%A2%E6%88%B7%E7%AB%AF/"},{"content":"使用axios发送post请求，在后端接收不到传过来的参数，多方查证无果，最终找到了这篇文章，转载过来作为记录。 作者：Never Yu丶 文章：axios 发 post 请求，后端接收不到参数的解决方案 链接：http","lvl0":"ajax axios发送post请求踩坑记录","lvl1":["前端"],"lvl2":"摘要","objectID":"1617864f289360c2e4f7517fff81b29e","tags":["axios"],"url":"https://tomtomyoung.top/post/ajax-axios%E5%8F%91%E9%80%81post%E8%AF%B7%E6%B1%82%E5%A1%AB%E5%9D%91/"},{"content":"kde桌面环境下，有一些软件打开后窗口没有阴影效果，和其他窗口放在一起感觉很违和，怎么美化这些窗口，让他们看起来和其他的窗口拥有统一的风格呢？答案是使用kwin的窗口规则来定制。 这里我们以网易云音乐为","lvl0":"linux kwin添加窗口阴影","lvl1":["linux"],"lvl2":"摘要","objectID":"007b9a45787f3e9c3703f6c2e9aa0ff6","tags":["kwin"],"url":"https://tomtomyoung.top/post/linux-kwin%E6%B7%BB%E5%8A%A0%E7%AA%97%E5%8F%A3%E9%98%B4%E5%BD%B1/"},{"content":"1.什么是Wine Wine是在x86、x86-64容许类Unix操作系统在X Window System运行Microsoft Windows程序的软件。另外，Wine也提供程序运行库（Winelib）来帮助计算机程","lvl0":"linux wine简介","lvl1":["linux"],"lvl2":"摘要","objectID":"25577dc2f493a656138bac0a6800a228","tags":["wine"],"url":"https://tomtomyoung.top/post/linux-wine%E7%AE%80%E4%BB%8B/"},{"content":"1.什么是debtap debtap是一个将.deb包转化为.pkg.tar.zst的工具，从而实现了在arch上安装debian的软件。由于ubuntu的盛行，很多软件都会有专门的.deb安装包，我们","lvl0":"linux debtap简介","lvl1":["linux"],"lvl2":"摘要","objectID":"a9d0a13fce759819e8dcda2f1534d2cb","tags":["debtap"],"url":"https://tomtomyoung.top/post/linux-debtap%E7%AE%80%E4%BB%8B/"},{"content":"1.Electron 是什么 1.Electron定义 Electron是一个能让你使用传统前端技术（Nodejs, Javascript, HTML, CSS）开发一个跨平台桌面应用的框架。这里所说的桌面应用指的是在Windows、OSX及Linux系统上","lvl0":"electron简介","lvl1":["前端"],"lvl2":"摘要","objectID":"b0d546376051d18dd8d8ac16884fdbe0","tags":["electron"],"url":"https://tomtomyoung.top/post/electron%E7%AE%80%E4%BB%8B/"},{"content":"1.换源 1sudo pacman-mirrors -i -c China -m rank 2sudo pacman -Syy 3sudo vi /etc/pacman.conf 修改/etc/pacman.conf,在最后一行添加： 1[archlinuxcn] 2SigLevel = Optional TrustedOnly 3Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch 安装archlinuxcn签名钥匙： 1sudo pacman -S archlinuxcn-keyring 2sudo pacman -Syy 2.安装yay yay 是用 Go 编写的 Arch Linux AUR 包管理工具。","lvl0":"linux manjaro初始化","lvl1":["linux"],"lvl2":"摘要","objectID":"0b8cf17f70b78cf4e7ab091abc6cbef8","tags":["manjaro"],"url":"https://tomtomyoung.top/post/linux-manjaro%E5%88%9D%E5%A7%8B%E5%8C%96/"},{"content":"1.pacman 在介绍 AUR 之前，先了解一些pacman基础知识。Arch Linux 使用 pacman 作为包管理器，它在提供了一个简单的包管理器的同时，页提供了一个易用的包构建系统，使用户能够轻松地管理和定制官方提供的、用户自己制作的、甚","lvl0":"linux aur简介","lvl1":["linux"],"lvl2":"摘要","objectID":"d7e562b6b6c57bb6c7f991e3edf24732","tags":["aur"],"url":"https://tomtomyoung.top/post/linux-aur%E7%AE%80%E4%BB%8B/"},{"content":"在同一台电脑里安装ubuntu18.04，manjaro20.0.3，win10三个系统，记录一下具体操作，以免以后还会用到。 1.安装windows ubuntu 关于安装win10和ubuntu18.04双系统的","lvl0":"manjaro+ubuntu+win10三系统安装","lvl1":["linux"],"lvl2":"摘要","objectID":"eef26417d836ba7373815cfa84ce74e8","tags":["多系统"],"url":"https://tomtomyoung.top/post/manjaro+ubuntu+win10%E4%B8%89%E7%B3%BB%E7%BB%9F/"},{"content":"1.偏差bias bias描述的是根据样本拟合出的模型的输出预测结果的期望与样本真实结果的差距。 简单讲，就是在样本上拟合的好不好。要想在bias上表现好，low bias，就得复杂化模型，增加模型的参数，","lvl0":"偏差与方差","lvl1":["算法"],"lvl2":"摘要","objectID":"23dc21f4cf566fcb9dfb23314075760c","tags":["偏差与方差"],"url":"https://tomtomyoung.top/post/%E5%81%8F%E5%B7%AE%E4%B8%8E%E6%96%B9%E5%B7%AE/"},{"content":"1.机器学习与深度学习 人工智能的浪潮正席卷全球，诸多词汇时刻萦绕在我们的耳边，如人工智能，机器学习，深度学习等。“人工智能”的概念早在1956年就被提出，顾名思义用计算机来构造复杂的，拥有与人类智慧同","lvl0":"pytorch简介","lvl1":["深度学习"],"lvl2":"摘要","objectID":"093db0514499f78243d3a937e882b2c8","tags":["pytorch"],"url":"https://tomtomyoung.top/post/pytorch%E7%AE%80%E4%BB%8B/"},{"content":"1.vue-cli简介 vue-cli俗称脚手架，可以快速创建vue项目结构，学习完webpack之后，我们会有一种体会就是项目的每个文件夹，每个文件都需要我们手动新建，小项目还好，如果遇到复杂的大项目","lvl0":"vue vuecli简介","lvl1":["前端"],"lvl2":"摘要","objectID":"4d46317891eca8fa8051d77d6c387631","tags":["vue"],"url":"https://tomtomyoung.top/post/vue-vuecli%E7%AE%80%E4%BB%8B/"},{"content":"1.algolia简介 Algolia是一家为网站与移动应用提供托管式搜索API的初创企业，Algolia的服务支持多种语言支持Ruby、Rails、Python、PHP、JS、Java、Android","lvl0":"hugo algolia搜索","lvl1":["博客"],"lvl2":"摘要","objectID":"6b143695d0cb1ad1412ea2e3812e24bf","tags":["hugo"],"url":"https://tomtomyoung.top/post/hugo-algolia%E6%90%9C%E7%B4%A2/"},{"content":"1.微信小程序简介 1.小程序和网页的区别 js操作不同 微信小程序里没有DOM和BOM，非常像vue，但是vue是有但是不用，而小程序是直接没有，这导致了我们平时使用的库很多也都不能用，比如jQuery等","lvl0":"微信小程序开发基础","lvl1":["前端"],"lvl2":"摘要","objectID":"75bf1fea1b2fb42081bf0904ae5fe99f","tags":["微信小程序"],"url":"https://tomtomyoung.top/post/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/"},{"content":"1.hugo自带toc模版 hugo本身带有生成文章导航的功能，使用{{ .TableOfContents}}变量，会在页面中渲染出id为TableOfContents的nav样式。 1.使用方法 官方文档给","lvl0":"hugo 生成toc导航","lvl1":["博客"],"lvl2":"摘要","objectID":"d6be77575a97ce903a1bf4a0371d2085","tags":["hugo"],"url":"https://tomtomyoung.top/post/hugo-%E7%94%9F%E6%88%90toc%E5%AF%BC%E8%88%AA/"},{"content":"1.新用户免费额度 在17，18年的时候，腾讯云的免费额度是很丰富的，作为个人用户也是完全够用的： 但是现在的免费额度早就发生了变化，个人用户只有免费的每月50G存储空间，持续6个月。也就是说，这半年里，","lvl0":"腾讯云cos收费详解","lvl1":["博客"],"lvl2":"摘要","objectID":"5b85bbed430604ce03048f8af4a12ce8","tags":["图床"],"url":"https://tomtomyoung.top/post/hugo-%E8%85%BE%E8%AE%AF%E4%BA%91cos%E6%94%B6%E8%B4%B9%E8%AF%A6%E8%A7%A3/"},{"content":"1.注册LeanCloud 官网地址：https://www.leancloud.cn/ 注册页面： 验证邮箱和是实名认证 2.配置LeanCloud 创建应用 获取AppID和AppKey 3.修改配置文件 在co","lvl0":"hugo valine评论","lvl1":["博客"],"lvl2":"摘要","objectID":"3b7e7417c7990a448b70809b371ce339","tags":["hugo"],"url":"https://tomtomyoung.top/post/hugo-valine%E8%AF%84%E8%AE%BA/"},{"content":"1. 安装picgo-core 直接在typora里面安装picgo-core，选择下载或更新。 2. 配置picgo-core 打开配置文件，在配置文件里填入以下内容： 1{ 2 \u0026#34;picBed\u0026#34;: { 3 \u0026#34;uploader\u0026#34;: \u0026#34;tcyun\u0026#34;, 4 \u0026#34;tcyun\u0026#34;: { 5 \u0026#34;secretId\u0026#34;: \u0026#34;\u0026#34;, 6 \u0026#34;secretKey\u0026#34;: \u0026#34;\u0026#34;, 7 \u0026#34;bucket\u0026#34;: \u0026#34;\u0026#34;, 8 \u0026#34;appId\u0026#34;: \u0026#34;\u0026#34;,","lvl0":"typora picgo上传图床","lvl1":["博客"],"lvl2":"摘要","objectID":"19d13226dedeae9270dee174a130ff4d","tags":["图床"],"url":"https://tomtomyoung.top/post/picgo-typora%E4%B8%8A%E4%BC%A0%E5%9B%BE%E5%BA%8A/"},{"content":"1.为什么选择腾讯云 我分别用了SMMS，七牛云，gitee pages自己搭建等方式，每一种都有不能忍受的缺点： SMMS 速度会抽风，在个别时间段会很慢，甚至加载不动。 安全性没有保障，不需要登陆自己的账号，直接","lvl0":"腾讯云作为个人博客图床","lvl1":["博客"],"lvl2":"摘要","objectID":"21c6b40c7f7959c618eb42b93b4839da","tags":["图床"],"url":"https://tomtomyoung.top/post/hugo-%E8%85%BE%E8%AE%AF%E4%BA%91%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/"},{"content":"1.安装opencv-python 关于版本，在网上查到的一种说法是3.4.2之后的opencv版本好像涉及到一些专利问题，有些东西是没有的，所以我决定安装3.4.1😙。 1.pip安装指定版本 1pip3 install -i https://pypi.douban.com/simple opencv-python==3.4.1.15","lvl0":"opencv\u0026notebook","lvl1":["深度学习"],"lvl2":"摘要","objectID":"a4c7a64d3357e990c51c826cdabe599e","tags":["opencv"],"url":"https://tomtomyoung.top/post/opencvnotebook/"},{"content":"1. 读取图像并显示 1src = cv.imread(\u0026#34;图片路径\u0026#34;) 2cv.namedWindow(\u0026#34;input image\u0026#34;, cv.WINDOW_AUTOSIZE) 3cv.imshow(\u0026#34;input image\u0026#34;, src) 2. 读取摄像头信息 1def video_demo(): 2 capture = cv.VideoCapture(0) 3 while(True): 4 ret, frame = capture.read() 5 frame = cv.flip(frame, 1) 6 cv.imshow(\u0026#34;video\u0026#34;, frame) 7 c = cv.waitKey(50) 8 if c == 27: 9 break 3. 图像像素反转 1def access_pixels(image): 2 print(image.shape) 3 height = image.shape[0] 4 width = image.shape[1]","lvl0":"图像处理的基本操作","lvl1":["深度学习"],"lvl2":"摘要","objectID":"348435beb50dad8ca5b233f3eeccbc3a","tags":["opencv"],"url":"https://tomtomyoung.top/post/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"},{"content":"自己搭建的博客一直不能显示emoji，现在记录一下在hugo博客中怎么开启emoji支持。 1. config.toml配置 在config.toml中进行配置 1enableEmoji = true 2. 添加CSS样式 在网页的CSS文件中加入以","lvl0":"hugo 使用emoji​​","lvl1":["博客"],"lvl2":"摘要","objectID":"bd2a6cef8bc84ed052df6832b714c1a0","tags":["hugo"],"url":"https://tomtomyoung.top/post/hugo-%E4%BD%BF%E7%94%A8emoji/"},{"content":"1.检查显卡驱动 安装cuda和cudnn之前要要检查系统现在使用的显卡驱动是不是闭源驱动。 1lsmod | grep nouveau 2如果没有输出说明nouveau是禁用状态 3 4nvidia-smi 5有输出说明驱动安装的是没有问题的，版本为440 如果上面","lvl0":"linux 搭建机器学习开发环境","lvl1":["linux"],"lvl2":"摘要","objectID":"ae7f043a66c65458c7ff472b0e73ec0d","tags":["manjaro"],"url":"https://tomtomyoung.top/post/linux-%E6%90%AD%E5%BB%BA%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83/"},{"content":"1.了解vim vim是最好的编辑之一，拥有以下几个优点： 高效率移动，使用vim的命令模式，可以让光标到达你想要的任何地方 高效率输入 vim可以进行关键词自动提示，输入几个字母然后按住ctrl+n，可以自","lvl0":"linux vim简介","lvl1":["linux"],"lvl2":"摘要","objectID":"05474a22ae3bc6f1e8df0fa20ab23f71","tags":["linux"],"url":"https://tomtomyoung.top/post/linux-vim%E7%AE%80%E4%BB%8B/"},{"content":"hugo官网：https://gohugo.io/ hugo主题：https://themes.gohugo.io/ 1.安装hugo 在hugo的git仓库下载最新版本 ubuntu系统选择hugo_0.7","lvl0":"hugo gitee搭建博客","lvl1":["博客"],"lvl2":"摘要","objectID":"fe35987cf34d14cc88e0aff64459916b","tags":["hugo"],"url":"https://tomtomyoung.top/post/hugo-gitee%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"content":"ctrl+0~4 一级到四级标题 ctrl+b 加粗 ctrl+i 斜体 ctrl+u 下划线 shift+alt+5 删除线 ctrl+k 超链接 锚点以#开头 ctrl+t 插入表格 name age school tom 11 mit jack 12 nnce ctrl+shift+q 引用 (直接用\u0026gt;更加快捷) 引用 ctrl+shift+i 插入图片 3个`+对应语言，插入代码块 1print(\u0026#34;hahaah\u0026#34;) +/*/- 生成无序列表，用tab生成多级","lvl0":"typora常用快捷键","lvl1":["博客"],"lvl2":"摘要","objectID":"40f6a254c83106adb499e0a1a45cd311","tags":["markdown"],"url":"https://tomtomyoung.top/post/typora%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"},{"content":"1.下载ubuntu系统 ubuntu官网下载镜像：https://ubuntu.com/download/desktop 目前ubuntu20.04LST版本已经发布，但安装过程和18.04LST应该没","lvl0":"win10+ubuntu18.04双系统","lvl1":["linux"],"lvl2":"摘要","objectID":"6e5dc670e20c1bf6735b4c403909fdb1","tags":["多系统"],"url":"https://tomtomyoung.top/post/win10+ubuntu18.04%E5%8F%8C%E7%B3%BB%E7%BB%9F/"}]