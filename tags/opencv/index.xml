<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>opencv on TomtomYoung Blog</title>
    <link>https://gaoshanwomeng.github.io/tags/opencv/</link>
    <description>Recent content in opencv on TomtomYoung Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 18 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://gaoshanwomeng.github.io/tags/opencv/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>opencv 腐蚀与膨胀</title>
      <link>https://gaoshanwomeng.github.io/post/opencv-%E8%85%90%E8%9A%80%E4%B8%8E%E8%86%A8%E8%83%80/</link>
      <pubDate>Sun, 18 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/opencv-%E8%85%90%E8%9A%80%E4%B8%8E%E8%86%A8%E8%83%80/</guid>
      <description>形态学操作 简单来讲，形态学操作就是基于形状的一系列图像处理操作。通过将 结构元素 作用于输入图像来产生输出图像。 最基本的形态学操作有二：腐蚀与膨胀(Erosion 与 Dilation)。 他们的运用广泛: 消除</description>
    </item>
    
    <item>
      <title>opencv&amp;notebook</title>
      <link>https://gaoshanwomeng.github.io/post/opencvnotebook/</link>
      <pubDate>Sun, 31 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/opencvnotebook/</guid>
      <description>1.安装opencv-python 关于版本，在网上查到的一种说法是3.4.2之后的opencv版本好像涉及到一些专利问题，有些东西是没有的，所以我决定安装3.4.1😙。 1.pip安装指定版本 1pip3 install -i https://pypi.douban.com/simple opencv-python==3.4.1.15</description>
    </item>
    
    <item>
      <title>图像处理的基本操作</title>
      <link>https://gaoshanwomeng.github.io/post/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sun, 31 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</guid>
      <description>1. 读取图像并显示 1src = cv.imread(&amp;#34;图片路径&amp;#34;) 2cv.namedWindow(&amp;#34;input image&amp;#34;, cv.WINDOW_AUTOSIZE) 3cv.imshow(&amp;#34;input image&amp;#34;, src) 2. 读取摄像头信息 1def video_demo(): 2 capture = cv.VideoCapture(0) 3 while(True): 4 ret, frame = capture.read() 5 frame = cv.flip(frame, 1) 6 cv.imshow(&amp;#34;video&amp;#34;, frame) 7 c = cv.waitKey(50) 8 if c == 27: 9 break 3. 图像像素反转 1def access_pixels(image): 2 print(image.shape) 3 height = image.shape[0] 4 width = image.shape[1]</description>
    </item>
    
  </channel>
</rss>
