<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>浏览器 on TomtomYoung Blog</title>
    <link>https://gaoshanwomeng.github.io/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/</link>
    <description>Recent content in 浏览器 on TomtomYoung Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 08 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://gaoshanwomeng.github.io/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>浏览器 setTimeout&amp;setInterval</title>
      <link>https://gaoshanwomeng.github.io/post/%E6%B5%8F%E8%A7%88%E5%99%A8-settimeoutsetinterval/</link>
      <pubDate>Thu, 08 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/%E6%B5%8F%E8%A7%88%E5%99%A8-settimeoutsetinterval/</guid>
      <description>1. setTimeout setTimeout的在一段时间之后，执行指定的一段函数 （仅执行一次） 可以理解为指定延迟后执行函数 2. setInterval setInterval是循环执行函数，每隔一段时间就执行一次指定的函数（执行N次） 可以理解为指</description>
    </item>
    
    <item>
      <title>浏览器 从浏览器多进程到js单线程</title>
      <link>https://gaoshanwomeng.github.io/post/%E6%B5%8F%E8%A7%88%E5%99%A8-%E4%BB%8E%E6%B5%8F%E8%A7%88%E5%99%A8%E5%A4%9A%E8%BF%9B%E7%A8%8B%E5%88%B0js%E5%8D%95%E7%BA%BF%E7%A8%8B/</link>
      <pubDate>Thu, 20 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/%E6%B5%8F%E8%A7%88%E5%99%A8-%E4%BB%8E%E6%B5%8F%E8%A7%88%E5%99%A8%E5%A4%9A%E8%BF%9B%E7%A8%8B%E5%88%B0js%E5%8D%95%E7%BA%BF%E7%A8%8B/</guid>
      <description>windows打开任务管理器，可以看到后台进程列表。可以看到每个进程的内存资源信息以及cpu占有率。 所以，应该更容易理解了：进程是cpu资源分配的最小单位（系统会给它分配内存） 最后，再用较为官方的术语</description>
    </item>
    
    <item>
      <title>浏览器 console API</title>
      <link>https://gaoshanwomeng.github.io/post/%E6%B5%8F%E8%A7%88%E5%99%A8-console-api/</link>
      <pubDate>Tue, 11 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/%E6%B5%8F%E8%A7%88%E5%99%A8-console-api/</guid>
      <description>console.assert(expression, object) 级别：Error expression评估为false时，将object写入控制台。 1 2 3 4 const x = 5; const y = 3; const reason = &amp;#39;x is expected to be less than y&amp;#39;; console.assert(x &amp;lt; y, {x, y, reason}); console.clear() 清空控制台 1 console.clear(); 如果启用了Preserve Log，con</description>
    </item>
    
    <item>
      <title>浏览器 chrome常用快捷键</title>
      <link>https://gaoshanwomeng.github.io/post/%E6%B5%8F%E8%A7%88%E5%99%A8-chrome%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/%E6%B5%8F%E8%A7%88%E5%99%A8-chrome%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <description>1. 浏览器快捷键 f12/ctrl+shift+c 打开devtools element界面 ctrl+shift+j 直接打开devtools console界面 ctrl+n 打开新的浏览器窗口 ctrl+shift+n 打开新的无痕浏览窗口 ctrl+w 关闭当前页面 shift+esc 打开任务管理器 ctrl+1-x 切换到不同页面 ctrl+p 打印页面 2. 开</description>
    </item>
    
    <item>
      <title>浏览器 chrome开发者工具使用指南</title>
      <link>https://gaoshanwomeng.github.io/post/%E6%B5%8F%E8%A7%88%E5%99%A8-chrome%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/%E6%B5%8F%E8%A7%88%E5%99%A8-chrome%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</guid>
      <description>1. console面板 1.1 查看记录的消息 记录消息的原因一般有两个： 确保代码以正确的顺序执行。 在某个时刻检查变量的值。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 console.log(&amp;#39;Loading!&amp;#39;); console.assert(document.querySelector(&amp;#39;h2&amp;#39;), &amp;#39;h2 not found!&amp;#39;); const artists = [ { first: &amp;#39;René&amp;#39;, last:</description>
    </item>
    
    <item>
      <title>面试题——浏览器</title>
      <link>https://gaoshanwomeng.github.io/post/%E9%9D%A2%E8%AF%95%E9%A2%98%E6%B5%8F%E8%A7%88%E5%99%A8/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/%E9%9D%A2%E8%AF%95%E9%A2%98%E6%B5%8F%E8%A7%88%E5%99%A8/</guid>
      <description>1. 浏览器的工作流程 2. 从输入URL到显示页面 DNS解析 建立TCP连接 客户端发动HTTP请求 服务端接收到请求并返回相应资源 浏览器渲染页面 断开连接 2. 浏览器缓存 2.1 http缓存 强缓存 协商缓存 缓存机制 2.2 本地存储 c</description>
    </item>
    
    <item>
      <title>w3c简介</title>
      <link>https://gaoshanwomeng.github.io/post/w3c%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Sun, 15 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/w3c%E7%AE%80%E4%BB%8B/</guid>
      <description>W3C，这个建立于 1994 年的组织，其宗旨是通过促进通用协议的发展并确保其通用型，以激发 web 世界的全部潜能 1.W3C 是什么？ W3C 指万维网联盟（World Wide Web Consortium） W3C 创建于1994年10月 W3C 由 Tim Berners-Lee 创建 W3C 是</description>
    </item>
    
    <item>
      <title>浏览器 localStorage&amp;sessionStorage&amp;cookie</title>
      <link>https://gaoshanwomeng.github.io/post/%E6%B5%8F%E8%A7%88%E5%99%A8-localstoragesessionstoragecookie/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/%E6%B5%8F%E8%A7%88%E5%99%A8-localstoragesessionstoragecookie/</guid>
      <description>1. 基本概念 Cookie Cookie 是小甜饼的意思。顾名思义，cookie 确实非常小，它的大小限制为4KB左右。它的主要用途有保存登录信息，比如你登录某个网站市场可以看到“记住密码”，这通常就是通过在 Cookie 中存入一段辨别用户身</description>
    </item>
    
    <item>
      <title>互联网运作方式</title>
      <link>https://gaoshanwomeng.github.io/post/%E4%BA%92%E8%81%94%E7%BD%91%E8%BF%90%E4%BD%9C%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Sun, 02 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/%E4%BA%92%E8%81%94%E7%BD%91%E8%BF%90%E4%BD%9C%E6%96%B9%E5%BC%8F/</guid>
      <description>1.举例 我们以我们使用浏览器访问bilibili这个网站为例，来看一下我们是如何使用互联网来发送和接收数据的。 当我的个人电脑接入互联网之后，我的电脑会得到一个编号用来标识我这台电脑的身份，这个编号地址</description>
    </item>
    
  </channel>
</rss>
