<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>树 on TomtomYoung Blog 🧐</title>
    <link>https://tomtomyoung.top/tags/%E6%A0%91/</link>
    <description>Recent content in 树 on TomtomYoung Blog 🧐</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 15 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://tomtomyoung.top/tags/%E6%A0%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://tomtomyoung.top/post/%E7%AE%97%E6%B3%95-%E5%A4%9A%E7%BA%A7%E5%AF%B9%E8%B1%A1%E5%B1%95%E5%BC%80/</link>
      <pubDate>Wed, 15 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/%E7%AE%97%E6%B3%95-%E5%A4%9A%E7%BA%A7%E5%AF%B9%E8%B1%A1%E5%B1%95%E5%BC%80/</guid>
      <description>1function deployObject(obj) { 2 if (typeof obj == &amp;#39;object&amp;#39;) { 3 let res = {}; 4 Object.keys(obj).forEach(key =&amp;gt; { 5 let value = obj[key] 6 if (value instanceof Array) { 7 value.forEach((item, index) =&amp;gt; { 8 res[key + `.${index}`] = item; 9 }) 10 } 11 else { 12 res[key] = obj[key]; 13 } 14 }) 15 Object.keys(res).forEach(key =&amp;gt; { 16 let value = res[key]; 17 if (typeof value == &amp;#39;object&amp;#39;) { 18 let subObj = deployObject(value); 19 Object.keys(subObj).forEach(subKey =&amp;gt; { 20 res[key + `.${subKey}`] = subObj[subKey]; 21 delete res[key]; 22 }) 23 } 24 }) 25 return res; 26</description>
    </item>
    
    <item>
      <title></title>
      <link>https://tomtomyoung.top/post/%E7%AE%97%E6%B3%95-%E6%A0%91%E7%9A%84%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/%E7%AE%97%E6%B3%95-%E6%A0%91%E7%9A%84%E6%93%8D%E4%BD%9C/</guid>
      <description>1. 遍历二叉树 1var {tree} = require(&amp;#39;../重建二叉树/3.js&amp;#39;) 2 3// 先序遍历 4var preTraResult = []; 5 6function preTra(tree){ 7 if(tree.val!=&amp;#39;#&amp;#39;){ 8 preTraResult.push(tree.val); 9 preTra(tree.left); 10 preTra(tree.right); 11 } 12 else{ 13 preTraResult.push(tree.val); 14 return; 15 } 16} 17 18preTra(tree); 19 20console.log(preTraResult); 21 22// 中序遍历 23var inorderTraResult = []; 24 25function inorderTra(tree){ 26 if(tree.val!=&amp;#39;#&amp;#39;){ 27 inorderTra(tree.left); 28 inorderTraResult.push(tree.val); 29 inorderTra(tree.right); 30 }</description>
    </item>
    
  </channel>
</rss>
