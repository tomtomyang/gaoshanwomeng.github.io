<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nodejs on TomtomYoung Blog 🧐</title>
    <link>https://tomtomyoung.top/tags/nodejs/</link>
    <description>Recent content in nodejs on TomtomYoung Blog 🧐</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 20 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://tomtomyoung.top/tags/nodejs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://tomtomyoung.top/post/nodejs%E4%B8%AD%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/</link>
      <pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/nodejs%E4%B8%AD%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/</guid>
      <description>事件循环机制解析 当 Node.js 启动后，它会初始化事件循环，处理已提供的输入脚本（或丢入 REPL ，本文不涉及到），它可能会调用一些异步的 API、调度定时器，或者调用 process.nextTick()，然后开始处理事件</description>
    </item>
    
    <item>
      <title></title>
      <link>https://tomtomyoung.top/post/nodejs%E4%B8%8Ejs%E7%9A%84%E5%85%B3%E7%B3%BB/</link>
      <pubDate>Wed, 16 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/nodejs%E4%B8%8Ejs%E7%9A%84%E5%85%B3%E7%B3%BB/</guid>
      <description>1. jacascript JavaScript 和 ECMAScript 通常被人用来表达相同的意思，但 JavaScript 的含义去比 ECMA-262 中规定的多得多。一个完整的 JavaScript 实现应由三个部分组成： 核心（ECMAScript） 文档对象模型（DOM） 浏览器对象模型（BOM） 1. ECMAScript 由 ECMA-262 定义的 ECMAScript 是一种</description>
    </item>
    
  </channel>
</rss>
