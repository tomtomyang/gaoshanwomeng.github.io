<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vue on TomtomYoung Blog</title>
    <link>https://tomtomyoung.top/tags/vue/</link>
    <description>Recent content in vue on TomtomYoung Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 05 Sep 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://tomtomyoung.top/tags/vue/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>vue 手写数据双向绑定</title>
      <link>https://tomtomyoung.top/post/vue-%E6%89%8B%E5%86%99%E6%95%B0%E6%8D%AE%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A/</link>
      <pubDate>Sun, 05 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/vue-%E6%89%8B%E5%86%99%E6%95%B0%E6%8D%AE%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A/</guid>
      <description>参考： Vue.js_深入响应式原理 Vue源码分析之实现一个简易版的Vue DMQ/mvvm vue源码解读（一）Observer/Dep/Watcher是如何实现数据绑定的 Observer、Dep、Watcher 傻傻搞</description>
    </item>
    
    <item>
      <title>vue 简介</title>
      <link>https://tomtomyoung.top/post/vue-%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Sat, 04 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/vue-%E7%AE%80%E4%BB%8B/</guid>
      <description>参考： Vue_doc Vue 和 React 的优点分别是什么？ (vue) =&amp;gt; {渐进式} Vue2.0 中，“渐进式框架”和“自底向上增量开发的设计”这两个概念是什么？ The Progressive Framework by Evan You 1. Vue是什么 这一点，Vue的官网说的很清楚： 一句话来说，一套用于构建用户界</description>
    </item>
    
    <item>
      <title>vue VirtualDOM与Diff详解</title>
      <link>https://tomtomyoung.top/post/vue-virtualdom%E4%B8%8Ediff%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 03 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/vue-virtualdom%E4%B8%8Ediff%E8%AF%A6%E8%A7%A3/</guid>
      <description>参考： VirtualDOM 与 diff( Vue 实现) 1. VNode 在刀耕火种的年代，我们需要在各个事件方法中直接操作DOM来达到修改视图的目的。但是当应用一大就会变得难以维护。 那我们是不是可以把真实DOM树抽象成一棵以JavaScript对象</description>
    </item>
    
    <item>
      <title>vue 数据劫持详解</title>
      <link>https://tomtomyoung.top/post/vue-%E6%95%B0%E6%8D%AE%E5%8A%AB%E6%8C%81%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 03 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/vue-%E6%95%B0%E6%8D%AE%E5%8A%AB%E6%8C%81%E8%AF%A6%E8%A7%A3/</guid>
      <description>参考： Vue.js_深入响应式原理 Vue源码分析之实现一个简易版的Vue DMQ/mvvm 1. 数据劫持原理 关于如何实现数据劫持，在Vue的官网有一段描述： Vue 最独特的特性之一，是其非侵入性的响应式系统。数据模型仅仅是普通</description>
    </item>
    
    <item>
      <title>Vue与React对比</title>
      <link>https://tomtomyoung.top/post/vue%E4%B8%8Ereact%E7%9A%84%E5%AF%B9%E6%AF%94/</link>
      <pubDate>Fri, 03 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/vue%E4%B8%8Ereact%E7%9A%84%E5%AF%B9%E6%AF%94/</guid>
      <description>参考： Vue_对比其他框架</description>
    </item>
    
    <item>
      <title>面试题——VUE</title>
      <link>https://tomtomyoung.top/post/%E9%9D%A2%E8%AF%95%E9%A2%98vue/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/%E9%9D%A2%E8%AF%95%E9%A2%98vue/</guid>
      <description>1. MVVM 2. VUE的特性/与React的区别 3. VUE的双向数据绑定的实现 核心是数据劫持与观察者模式 3.1 VUE2 3.2 VUE3 3.3 DOM diff 4. VUE的生命周期 beforeCreate( 创建前 ) 在实例初始化之后，数据观测和事件配置之前被调用，此时组件的选项对象</description>
    </item>
    
    <item>
      <title>elementUI事件回调函数传参，传递默认参数和自定义参数填坑</title>
      <link>https://tomtomyoung.top/post/elementui%E4%BA%8B%E4%BB%B6%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%E4%BC%A0%E5%8F%82%E4%BC%A0%E9%80%92%E9%BB%98%E8%AE%A4%E5%8F%82%E6%95%B0%E5%92%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%82%E6%95%B0%E5%A1%AB%E5%9D%91/</link>
      <pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/elementui%E4%BA%8B%E4%BB%B6%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%E4%BC%A0%E5%8F%82%E4%BC%A0%E9%80%92%E9%BB%98%E8%AE%A4%E5%8F%82%E6%95%B0%E5%92%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%82%E6%95%B0%E5%A1%AB%E5%9D%91/</guid>
      <description>使用element一些组件，事件如果还有默认参数，如果想在添加自定义参数。 如： handleCheckedCitiesChange事件默认有一个回调参数，如果传一个自定义参数直接写的话 handleCheckedCitiesChange (“自定义参数”</description>
    </item>
    
    <item>
      <title>vue v-if填坑</title>
      <link>https://tomtomyoung.top/post/vue-v-if%E5%A1%AB%E5%9D%91/</link>
      <pubDate>Mon, 01 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/vue-v-if%E5%A1%AB%E5%9D%91/</guid>
      <description>在使用v-if控制元素显示隐藏时候，如果判断条件是数组中的元素，在一开始页面渲染显示正常，可以用数组内的变量来控制v-if元素，但是以后通过方法直接改变数组内变量却不能影响v-if控制的元素显示隐藏。</description>
    </item>
    
    <item>
      <title>vue v-model绑定vuex中state数据报错填坑</title>
      <link>https://tomtomyoung.top/post/vue-v-model%E7%BB%91%E5%AE%9Avuex%E4%B8%ADstate%E6%95%B0%E6%8D%AE%E6%8A%A5%E9%94%99%E5%A1%AB%E5%9D%91/</link>
      <pubDate>Sat, 30 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/vue-v-model%E7%BB%91%E5%AE%9Avuex%E4%B8%ADstate%E6%95%B0%E6%8D%AE%E6%8A%A5%E9%94%99%E5%A1%AB%E5%9D%91/</guid>
      <description>1. 代码背景 用vuex管理数据状态，state中有定义 expressTemplate: false, vue的cart页面有使用vant的标签, 提示报错Computed property “expressTemplate” was assigned to but it has no setter. 1&amp;lt;el-radio-group v-model=&amp;#34;expressTemplate&amp;#34;&amp;gt; 2 &amp;lt;el-radio v-for=&amp;#34;( item, index ) in expressList&amp;#34; :key=&amp;#34;index&amp;#34; :label=&amp;#34;item.id&amp;#34;&amp;gt;{{item.name}}&amp;lt;/el-radio&amp;gt; 3&amp;lt;/el-radio-group&amp;gt;</description>
    </item>
    
    <item>
      <title>el-table定制选中行样式和展开行样式</title>
      <link>https://tomtomyoung.top/post/el-table%E5%AE%9A%E5%88%B6%E9%80%89%E4%B8%AD%E8%A1%8C%E5%B1%95%E5%BC%80%E8%A1%8C%E6%A0%B7%E5%BC%8F/</link>
      <pubDate>Sun, 17 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/el-table%E5%AE%9A%E5%88%B6%E9%80%89%E4%B8%AD%E8%A1%8C%E5%B1%95%E5%BC%80%E8%A1%8C%E6%A0%B7%E5%BC%8F/</guid>
      <description>1. 变量 变量如下所示： 1data() { 2 return { 3 // 记录选中行 4 selectRow: [], 5 // 记录展开行 6 expandRow: [], 7 // 表格数据 id必须有！！ 8 tableData: [ 9 { 10 id: 1, 11 wangwangID: &amp;#39;hahahaha-101&amp;#39;, 12 count: &amp;#39;20&amp;#39;, 13 date: &amp;#39;2016-05-03&amp;#39;, 14 name: &amp;#39;王小虎&amp;#39;, 15 address: &amp;#39;上海市普陀区金沙江路 1518 弄</description>
    </item>
    
    <item>
      <title>elementUI组件二次封装</title>
      <link>https://tomtomyoung.top/post/elementui%E7%BB%84%E4%BB%B6%E4%BA%8C%E6%AC%A1%E5%B0%81%E8%A3%85/</link>
      <pubDate>Sun, 17 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/elementui%E7%BB%84%E4%BB%B6%E4%BA%8C%E6%AC%A1%E5%B0%81%E8%A3%85/</guid>
      <description>1. 新建组件 在components文件夹下新建组件，或者可以新建一个UI文件夹，用来专门存放二次封装的UI组件。 2. 编写组件 1. 基本结构 1&amp;lt;template&amp;gt; 2 &amp;lt;el-dialog 3 class=&amp;#34;dialog-1&amp;#34; &amp;gt; 4 &amp;lt;/el-dialog&amp;gt; 5&amp;lt;/template&amp;gt; 6 7&amp;lt;script&amp;gt; 8export default { 9 name: &amp;#34;myDialog1&amp;#34;, 10 props: { 11 }, 12 computed: { 13 }, 14 methods: { 15 } 16} 17&amp;lt;/script&amp;gt; 18</description>
    </item>
    
    <item>
      <title>vue slot简介</title>
      <link>https://tomtomyoung.top/post/vue-slot%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Sat, 24 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/vue-slot%E7%AE%80%E4%BB%8B/</guid>
      <description>1.什么是插槽？ 插槽（Slot）是Vue提出来的一个概念，正如名字一样，插槽用于决定将所携带的内容，插入到指定的某个位置，从而使模板分块，具有模块化的特质和更大的重用性。 插槽显不显示、怎样显示是由父组</description>
    </item>
    
    <item>
      <title>vue vuex简介</title>
      <link>https://tomtomyoung.top/post/vue-vuex%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Fri, 23 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/vue-vuex%E7%AE%80%E4%BB%8B/</guid>
      <description>1. 概述 Vuex是实现组件全局状态（数据）管理的一种机制，可以方便的实现组件之间的数据共享。 2. 优势 使用Vuex管理数据的好处： 能够在vuex中集中管理共享的数据，便于开发和后期进行维护 能够高效的实现组件</description>
    </item>
    
    <item>
      <title>ts ts与vue</title>
      <link>https://tomtomyoung.top/post/ts-ts%E4%B8%8Evue/</link>
      <pubDate>Fri, 04 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/ts-ts%E4%B8%8Evue/</guid>
      <description>1.为什么是TS+VUE 前端正处在逐步挺进企业级开发业务的过程中，强类型的TS已经广泛的使用起来，而脚手架工具也是前端工程化的基础。 2.使用vuecli脚手架创建项目 1.创建项目 1vue create 项目名 2.安装vu</description>
    </item>
    
    <item>
      <title>vue vuecli简介</title>
      <link>https://tomtomyoung.top/post/vue-vuecli%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/vue-vuecli%E7%AE%80%E4%BB%8B/</guid>
      <description>1.vue-cli简介 vue-cli俗称脚手架，可以快速创建vue项目结构，学习完webpack之后，我们会有一种体会就是项目的每个文件夹，每个文件都需要我们手动新建，小项目还好，如果遇到复杂的大项目</description>
    </item>
    
  </channel>
</rss>