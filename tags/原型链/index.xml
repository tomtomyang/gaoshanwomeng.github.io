<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>原型链 on TomtomYoung Blog</title>
    <link>https://tomtomyoung.top/tags/%E5%8E%9F%E5%9E%8B%E9%93%BE/</link>
    <description>Recent content in 原型链 on TomtomYoung Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 07 Sep 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://tomtomyoung.top/tags/%E5%8E%9F%E5%9E%8B%E9%93%BE/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>js Class详解</title>
      <link>https://tomtomyoung.top/post/js-class%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Tue, 07 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/js-class%E8%AF%A6%E8%A7%A3/</guid>
      <description>参考： MDN_Class 1. 声明类 1class Rectangle { 2 constructor(height, width) { 3 this.height = height; 4 this.width = width; 5 } 6} 函数声明和类声明之间的一个重要区别在于，函数声明会提升，类声明不会。你首先需要声明你的类，然后再访问它，否则类似以下的代码将抛出ReferenceE</description>
    </item>
    
    <item>
      <title>js 类与继承详解</title>
      <link>https://tomtomyoung.top/post/js-%E7%B1%BB%E4%B8%8E%E7%BB%A7%E6%89%BF%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/js-%E7%B1%BB%E4%B8%8E%E7%BB%A7%E6%89%BF%E8%AF%A6%E8%A7%A3/</guid>
      <description>参考： MDN_JavaScript 中的继承 js继承的几种方式 Javascript继承机制的设计思想 Javascript – How Prototypal Inheritance really works javascript 中实现继承的六种方式 ES6里Class的Extends继承原理 有些人认为JavaScript并不是真正的面向对象</description>
    </item>
    
    <item>
      <title>js new详解</title>
      <link>https://tomtomyoung.top/post/js-new%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Tue, 31 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/js-new%E8%AF%A6%E8%A7%A3/</guid>
      <description>参考： MDN_new js中关键字new的原理（含实现代码） 1. new new会实例化类的实例对象，或者说，使用构造函数，构造一个我们想要的对象。 关于类的定义有两种，使用构造函数定义的类，使用Class关键字定义的类。 1. 构</description>
    </item>
    
    <item>
      <title>js 原型与原型链详解</title>
      <link>https://tomtomyoung.top/post/js-%E5%8E%9F%E5%9E%8B%E4%B8%8E%E5%8E%9F%E5%9E%8B%E9%93%BE%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Tue, 31 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/js-%E5%8E%9F%E5%9E%8B%E4%B8%8E%E5%8E%9F%E5%9E%8B%E9%93%BE%E8%AF%A6%E8%A7%A3/</guid>
      <description>参考： js对象(一)——创建对象 js对象（二）—— 函数与对象的关系（认识原型链） 一张图搞定JS原型&amp;amp;原型链 js的初学者一般很难理解原型和原型链的概念，但原型和原型链又是js中最重要的点之一，关</description>
    </item>
    
  </channel>
</rss>