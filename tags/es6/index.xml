<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>es6 on TomtomYoung Blog</title>
    <link>https://gaoshanwomeng.github.io/tags/es6/</link>
    <description>Recent content in es6 on TomtomYoung Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 25 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://gaoshanwomeng.github.io/tags/es6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>es6 数值扩展</title>
      <link>https://gaoshanwomeng.github.io/post/es6-%E6%95%B0%E5%80%BC%E6%89%A9%E5%B1%95/</link>
      <pubDate>Thu, 25 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/es6-%E6%95%B0%E5%80%BC%E6%89%A9%E5%B1%95/</guid>
      <description>1. Number.EPSILON Number.EPSILON 是 JavaScript 表示的最小精度 EPSILON 属性的值接近于 2.2204460492503130808472633361816E-16 1function equal(a, b){ 2 if(Math.abs(a-b) &amp;lt; Number.EPSILON){ 3 return true; 4 }else{ 5 return false; 6 } 7} 8console.log(0.1 + 0.2 === 0.3); // false 0.1+1.2 = 0.30000000000000004 9console.log(equal(0.1 + 0.2, 0.3)) // true 10 2. 二进制和八进制 1let b = 0b1010; 2let o = 0o777; 3let d = 100; 4let x = 0xff; 5console.log(x); 3. Number.isFinite Number.isFinite 检测一个数值是否为有限数 1console.log(Number.isFinite(100)); 2console.log(Number.isFinite(100/0)); 3console.log(Number.isFinite(Infinity)); 4.</description>
    </item>
    
    <item>
      <title>es6 模板字符串</title>
      <link>https://gaoshanwomeng.github.io/post/es6-%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Tue, 16 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/es6-%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>字符串模板引擎 ES5中的字符串缺乏多行字符串、字符串格式化、HTML转义等特性。 而ES6通过模板字面量的方式进行了填补，模板字面量试着跳出JS已有的字符串体系，通过一些全新的方法来解决问题。 1.基本用</description>
    </item>
    
  </channel>
</rss>
