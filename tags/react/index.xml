<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React on TomtomYoung Blog</title>
    <link>https://gaoshanwomeng.github.io/tags/react/</link>
    <description>Recent content in React on TomtomYoung Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 10 May 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://gaoshanwomeng.github.io/tags/react/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>react react-native简介</title>
      <link>https://gaoshanwomeng.github.io/post/react-react-native%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/react-react-native%E7%AE%80%E4%BB%8B/</guid>
      <description>1.什么是React Native 要了解RN，肯定是要从官网入手： 按照官网的介绍，RN是使用React来创建Android和ios的原生应用的JavaScript框架。 RN具有以下的特点： 一次学习，随处编写 因为R</description>
    </item>
    
    <item>
      <title>react 简介</title>
      <link>https://gaoshanwomeng.github.io/post/react-%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/react-%E7%AE%80%E4%BB%8B/</guid>
      <description>1. 什么是react 用来构建UI的 JavaScript库 React 不是一个 MVC 框架，仅仅是视图（V）层的库 2. react的特点 使用 JSX语法 创建组件，实现组件化开发，为函数式的 UI 编程方式打开了大门 虚拟DOM（Vir</description>
    </item>
    
    <item>
      <title>react 事件处理</title>
      <link>https://gaoshanwomeng.github.io/post/react-%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86/</link>
      <pubDate>Sun, 28 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/react-%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86/</guid>
      <description>通过onXxx属性指定事件处理函数（注意大小写） React使用的是自定义（合成）事件，而不是使用原生的DOM事件，为了更好的兼容性 React中的事件是通过事件委托方处理的（委托给组件的最外层元素 通过e</description>
    </item>
    
    <item>
      <title>react 受控组件和非受控组件</title>
      <link>https://gaoshanwomeng.github.io/post/react-%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6%E5%92%8C%E9%9D%9E%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Sun, 28 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/react-%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6%E5%92%8C%E9%9D%9E%E5%8F%97%E6%8E%A7%E7%BB%84%E4%BB%B6/</guid>
      <description>1. 非受控组件（现用现取） 非受控组件就是现用现取 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 //创建组件 class Login extends React.Component{ handleSubmit = (event)=&amp;gt;{ event.preventDefault() //阻止表单提交 const {username,password} = this alert(`你输入的用户名是：${username.value</description>
    </item>
    
    <item>
      <title>react 类式组件</title>
      <link>https://gaoshanwomeng.github.io/post/react-%E7%B1%BB%E5%BC%8F%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Sat, 27 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/react-%E7%B1%BB%E5%BC%8F%E7%BB%84%E4%BB%B6/</guid>
      <description>React中有两种定义组件的方式： 函数式定义组件 1 2 3 function Welcome() { return &amp;lt;h1&amp;gt;函数式&amp;lt;/h1&amp;gt; } 类式定义组件 1 2 3 4 5 class Welcome extends React.Component { render() { return &amp;lt;h1&amp;gt;类式&amp;lt;/h1&amp;gt;; }</description>
    </item>
    
    <item>
      <title>import React,{Component} from &#39;react&#39;解释</title>
      <link>https://gaoshanwomeng.github.io/post/import-reactcomponent-from-react%E8%A7%A3%E9%87%8A/</link>
      <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/import-reactcomponent-from-react%E8%A7%A3%E9%87%8A/</guid>
      <description>在学习react框架时，我们会在App.js中写这样一种语法： 1 import React,{Component} from &amp;#39;react&amp;#39; 表面看起来是结构赋值的样子，但其实，这是ES6的另一种引入方式，即default引入与单个引入相结合的方式。 想使用这种引入方式，</description>
    </item>
    
  </channel>
</rss>