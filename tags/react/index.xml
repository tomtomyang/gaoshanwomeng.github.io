<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>react on TomtomYoung Blog</title>
    <link>https://tomtomyoung.top/tags/react/</link>
    <description>Recent content in react on TomtomYoung Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 10 Sep 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://tomtomyoung.top/tags/react/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>react Fiber详解</title>
      <link>https://tomtomyoung.top/post/react-fiber%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/react-fiber%E8%AF%A6%E8%A7%A3/</guid>
      <description>参考： 走进React Fiber的世界 手写React的Fiber架构，深入理解其原理 1. 背景 在之前的《react react 时间切片与requestIdleCallback详解》中，我们了解到 React 为了解决浏览器性能瓶</description>
    </item>
    
    <item>
      <title>react 时间切片与requestIdleCallback详解</title>
      <link>https://tomtomyoung.top/post/react-%E6%97%B6%E9%97%B4%E5%88%87%E7%89%87%E4%B8%8Erequestidlecallback%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/react-%E6%97%B6%E9%97%B4%E5%88%87%E7%89%87%E4%B8%8Erequestidlecallback%E8%AF%A6%E8%A7%A3/</guid>
      <description>参考： 走进React Fiber的世界 1. 浏览器性能瓶颈 我们日常使用App，浏览网页时，有两类场景会制约快速响应： 当遇到大计算量的操作或者设备性能不足使页面掉帧，导致卡顿。 发送网络请求后，由于需要等待数据</description>
    </item>
    
    <item>
      <title>react 函数式编程范式</title>
      <link>https://tomtomyoung.top/post/react-%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E8%8C%83%E5%BC%8F/</link>
      <pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/react-%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E8%8C%83%E5%BC%8F/</guid>
      <description>参考： React躬行记（1）——函数式编程 React世界的函数式编程(Functional Programming) 1. 函数式编程定义 函数式编程（Functional Programming）不是一种新的框架或工具，而是一种以函</description>
    </item>
    
    <item>
      <title>react 函数组件详解</title>
      <link>https://tomtomyoung.top/post/react-%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/react-%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A3/</guid>
      <description>参考： React 函数组件详解 hooks和类组件的区别 为什么 React 现在要推行函数式组件，用 class 不好吗？ 谈谈react hooks的优缺点 React Hooks 详解 React中有两种定义组件的方式： 函数定义组件 1function Welcome() { 2 return &amp;lt;h1&amp;gt</description>
    </item>
    
    <item>
      <title>react 手写react16.x</title>
      <link>https://tomtomyoung.top/post/react-%E6%89%8B%E5%86%99react16.x/</link>
      <pubDate>Tue, 07 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/react-%E6%89%8B%E5%86%99react16.x/</guid>
      <description>参考： 8月更文挑战｜react手写实现渲染JSX普通版 手写一个简单的 React 手写一个react系列（一）：实现react和react-dom 手写 react 核心源码 面试装不了逼？当场手写个react16.x框架给他看</description>
    </item>
    
    <item>
      <title>react jsx详解</title>
      <link>https://tomtomyoung.top/post/react-jsx%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Mon, 06 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/react-jsx%E8%AF%A6%E8%A7%A3/</guid>
      <description>参考： react中文文档_JSX简介 React 之技术详解（三）- 深入理解 JSX 手写 react 核心源码 配置babel-loader处理JSX语法 1. 什么是 JSX 设想如下变量声明： 1const element = &amp;lt;h1&amp;gt;Hello, world!&amp;lt;/h1&amp;gt;; 这个语法既不是字符串也不是 HTML，而是</description>
    </item>
    
    <item>
      <title>react-native 简介</title>
      <link>https://tomtomyoung.top/post/react-native-%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Mon, 06 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/react-native-%E7%AE%80%E4%BB%8B/</guid>
      <description>参考： React Native 中文网 React Native 介绍 深入理解react-native Metro_Docs react-native metro 分析 react-native bundle 到 bundle 生成到底发生了什么(metro 打包流程简析) JavaScriptCore 深入浅出JavaScriptCore React Native、React和Javascri</description>
    </item>
    
    <item>
      <title>react 简介</title>
      <link>https://tomtomyoung.top/post/react-%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Thu, 02 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/react-%E7%AE%80%E4%BB%8B/</guid>
      <description>参考： React_doc React的特点和优势 Vue 和 React 的优点分别是什么？ React技术解密笔记——理念篇 1. React 是什么 React 是一个用于构建用户界面的 JavaScript 库。 使用 React 可以将一些独立的代码片段组合成复杂的 UI 界面，这些代码片段被称作“组</description>
    </item>
    
    <item>
      <title>react 类组件详解</title>
      <link>https://tomtomyoung.top/post/react-%E7%B1%BB%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Tue, 10 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/react-%E7%B1%BB%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A3/</guid>
      <description>React中有两种定义组件的方式： 函数定义组件 1function Welcome() { 2 return &amp;lt;h1&amp;gt;函数式&amp;lt;/h1&amp;gt; 3} 类定义组件 1class Welcome extends React.Component { 2 render() { 3 return &amp;lt;h1&amp;gt;类式&amp;lt;/h1&amp;gt;; 4 } 5} 我们来主要</description>
    </item>
    
  </channel>
</rss>