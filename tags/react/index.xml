<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>react on TomtomYoung Blog</title>
    <link>https://tomtomyoung.top/tags/react/</link>
    <description>Recent content in react on TomtomYoung Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 06 Sep 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://tomtomyoung.top/tags/react/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>react jsx详解</title>
      <link>https://tomtomyoung.top/post/react-jsx%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Mon, 06 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/react-jsx%E8%AF%A6%E8%A7%A3/</guid>
      <description>参考： react中文文档_JSX简介 设想如下变量声明： 1const element = &amp;lt;h1&amp;gt;Hello, world!&amp;lt;/h1&amp;gt;; 这个有趣的标签语法既不是字符串也不是 HTML。 它被称为 JSX，是一个 JavaScript 的语法扩展。我们建议在 React 中配合使用 JSX，JSX 可以很好地描述 UI 应</description>
    </item>
    
    <item>
      <title>react 函数式组件详解</title>
      <link>https://tomtomyoung.top/post/react-%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Mon, 06 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/react-%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A3/</guid>
      <description>React中有两种定义组件的方式： 函数式定义组件 1function Welcome() { 2 return &amp;lt;h1&amp;gt;函数式&amp;lt;/h1&amp;gt; 3} 类式定义组件 1class Welcome extends React.Component { 2 render() { 3 return &amp;lt;h1&amp;gt;类式&amp;lt;/h1&amp;gt;; 4 } 5} 关于类</description>
    </item>
    
    <item>
      <title>react-native 简介</title>
      <link>https://tomtomyoung.top/post/react-native-%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Mon, 06 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/react-native-%E7%AE%80%E4%BB%8B/</guid>
      <description>参考： React Native 中文网 React Native 介绍 深入理解react-native Metro_Docs react-native metro 分析 react-native bundle 到 bundle 生成到底发生了什么(metro 打包流程简析) JavaScriptCore 深入浅出JavaScriptCore React Native、React和Javascri</description>
    </item>
    
    <item>
      <title>Vue与React对比</title>
      <link>https://tomtomyoung.top/post/vue%E4%B8%8Ereact%E7%9A%84%E5%AF%B9%E6%AF%94/</link>
      <pubDate>Fri, 03 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/vue%E4%B8%8Ereact%E7%9A%84%E5%AF%B9%E6%AF%94/</guid>
      <description>参考： Vue_对比其他框架</description>
    </item>
    
    <item>
      <title>react Hooks详解</title>
      <link>https://tomtomyoung.top/post/react-hooks%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 02 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/react-hooks%E8%AF%A6%E8%A7%A3/</guid>
      <description>参考：</description>
    </item>
    
    <item>
      <title>react 生命周期详解</title>
      <link>https://tomtomyoung.top/post/react-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Thu, 02 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/react-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E8%AF%A6%E8%A7%A3/</guid>
      <description>参考：</description>
    </item>
    
    <item>
      <title>react 简介</title>
      <link>https://tomtomyoung.top/post/react-%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Thu, 02 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/react-%E7%AE%80%E4%BB%8B/</guid>
      <description>参考： React_doc React的特点和优势 Vue 和 React 的优点分别是什么？ React技术解密笔记——理念篇 1. React 是什么 React 是一个用于构建用户界面的 JavaScript 库。 使用 React 可以将一些独立的代码片段组合成复杂的 UI 界面，这些代码片段被称作“组</description>
    </item>
    
    <item>
      <title>react 类式组件详解</title>
      <link>https://tomtomyoung.top/post/react-%E7%B1%BB%E5%BC%8F%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Tue, 10 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tomtomyoung.top/post/react-%E7%B1%BB%E5%BC%8F%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A3/</guid>
      <description>React中有两种定义组件的方式： 函数式定义组件 1function Welcome() { 2 return &amp;lt;h1&amp;gt;函数式&amp;lt;/h1&amp;gt; 3} 类式定义组件 1class Welcome extends React.Component { 2 render() { 3 return &amp;lt;h1&amp;gt;类式&amp;lt;/h1&amp;gt;; 4 } 5} 我们来</description>
    </item>
    
  </channel>
</rss>