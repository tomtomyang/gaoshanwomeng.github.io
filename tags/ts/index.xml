<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ts on TomtomYoung Blog</title>
    <link>https://gaoshanwomeng.github.io/tags/ts/</link>
    <description>Recent content in ts on TomtomYoung Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 10 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://gaoshanwomeng.github.io/tags/ts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ts 断点调试</title>
      <link>https://gaoshanwomeng.github.io/post/ts-%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95/</link>
      <pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/ts-%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95/</guid>
      <description>1.什么是断点 断点是程序暂停执行的位置，调试时程序运行到此处，就会暂停。 2.vscode中配置ts调试 在vscode中选择运行，然后选择添加配置： 在launch.json里写入一下内容 1{ 2 // 使用 IntelliSense 了解</description>
    </item>
    
    <item>
      <title>ts ts与vue</title>
      <link>https://gaoshanwomeng.github.io/post/ts-ts%E4%B8%8Evue/</link>
      <pubDate>Fri, 04 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/ts-ts%E4%B8%8Evue/</guid>
      <description>1.为什么是TS+VUE 前端正处在逐步挺进企业级开发业务的过程中，强类型的TS已经广泛的使用起来，而脚手架工具也是前端工程化的基础。 2.使用vuecli脚手架创建项目 1.创建项目 1vue create 项目名 2.安装vu</description>
    </item>
    
    <item>
      <title>ts 类与对象</title>
      <link>https://gaoshanwomeng.github.io/post/ts-%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Fri, 04 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/ts-%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/</guid>
      <description>下面我们建一个类：class Duck 1class Duck { 2 DuckName: string; 3 Age: number; 4 Fly: string; 5 constructor(duckName: string, age: number, fly: string) { 6 this.DuckName = duckName; 7 this.Age = age; 8 this.Fly = fly; 9 } 10 greet() { 11 let outString: string = &amp;#34;我是鸭子，我的名字是&amp;#34; + this.DuckName + &amp;#34;，我现在&amp;#34; + this.Age + &amp;#3</description>
    </item>
    
    <item>
      <title>ts 基础语法</title>
      <link>https://gaoshanwomeng.github.io/post/ts-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Fri, 21 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/ts-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</guid>
      <description>1.变量与数据类型 1.声明变量 在js中变量是不区分类型的，这一点在ts中做出了改变，ts规定变量在声明时必须规定好这个变量的数据类型，并以:的形式进行指定。 2.数据类型 JavaScript 的类型分为两种：原始数据类型（</description>
    </item>
    
    <item>
      <title>ts 安装和配置</title>
      <link>https://gaoshanwomeng.github.io/post/ts-%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Fri, 21 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gaoshanwomeng.github.io/post/ts-%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</guid>
      <description>1.TS简介 TypeScript 是 JavaScript 的一个超集，主要提供了类型系统和对 ES6 的支持，它由 Microsoft 开发，代码开源于 GitHub 上。 其次引用官网的定义： TypeScript 是 JavaScript 的类型的超集，它可以编译成纯 JavaScript。编译出来的 JavaScript 可以运行在任何浏览器上</description>
    </item>
    
  </channel>
</rss>
